{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","whitelist.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","maxMintAmountPerTx","maxMintAmountPerAddress","paused","onlyWhitelisted","minted","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","getCost","getMaxMintAmountPerTx","getMaxMintAmountPerAddress","getPaused","getOnlyWhitelisted","numberMinted","console","log","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","rpc","walletlink","WalletLink","appName","chainId","appLogoUrl","darkMode","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","addresses","MerkleTree","require","keccak256","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","setTotalSupply","setIsNotWhitelisted","hideButtons","setHideButtons","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","leafNodes","map","addr","merkleTree","sortPairs","rootHash","getRoot","mintNFTs","checkMintsAvailable","gasLimit","totalCostWei","String","totalGasLimit","claimingAddress","hexProof","getHexProof","mintWhitelist","send","to","from","value","once","err","then","receipt","claimWhitelistNFTs","claimNFTs","mint","Number","checkWhitelist","leaf","proof","verify","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","xhrEthplorer","XMLHttpRequest","responseType","open","onload","parseInt","response","onerror","getTotalSupply","style","padding","backgroundColor","href","alt","src","onMouseOver","e","currentTarget","onMouseOut","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","length","substring","onClick","preventDefault","abiResponse","abi","localStorage","removeItem","web3Modal","Web3Modal","network","cacheProvider","connect","provider","Web3","Web3EthContract","setProvider","eth","getAccounts","accounts","request","method","networkId","SmartContractObj","on","window","location","reload","message","includes","lineHeight","visibility","disabled","newMintAmount","decrementMintAmount","mintsAvailable","incrementMintAmount","hidden","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7119a3d8.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: -1,\r\n  cost: 0,\r\n  maxMintAmountPerTx: 0,\r\n  maxMintAmountPerAddress: 0,\r\n  paused: true,\r\n  onlyWhitelisted: true,\r\n  minted: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        cost: action.payload.cost,\r\n        maxMintAmountPerTx: action.payload.maxMintAmountPerTx,\r\n        maxMintAmountPerAddress: action.payload.maxMintAmountPerAddress,\r\n        paused: action.payload.paused,\r\n        onlyWhitelisted: action.payload.onlyWhitelisted,\r\n        minted: action.payload.minted,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      \r\n      let cost = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.getCost()\r\n        .call();\r\n\r\n      let maxMintAmountPerTx = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.getMaxMintAmountPerTx()\r\n        .call();\r\n\r\n      let maxMintAmountPerAddress = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.getMaxMintAmountPerAddress()\r\n        .call();\r\n\r\n      let paused = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.getPaused()\r\n        .call();\r\n\r\n      let onlyWhitelisted = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.getOnlyWhitelisted()\r\n        .call();\r\n\r\n      let minted = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.numberMinted(store.getState().blockchain.account)\r\n        .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          cost,\r\n          maxMintAmountPerTx,\r\n          maxMintAmountPerAddress,\r\n          paused,\r\n          onlyWhitelisted,\r\n          minted\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport WalletLink from \"walletlink\";\r\n\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst INFURA_ID = \"\";\r\n\r\nconst providerOptions = {\r\n  walletconnect: {\r\n    package: WalletConnectProvider, // required\r\n    options: {\r\n      infuraId: INFURA_ID, // required\r\n      rpc: {\r\n        1: \"https://mainnet.infura.io/v3/\", // Ethereum Mainnet\r\n        43114: \"https://api.avax.network/ext/bc/C/rpc\", // AVAX C-Chain\r\n      },\r\n    },\r\n  },\r\n  walletlink: {\r\n    package: WalletLink, // Required\r\n    options: {\r\n      appName: \"Cool Cookies\", // Required\r\n      infuraId: \"\", // Required unless you provide a JSON RPC url; see `rpc` below\r\n      rpc: \"https://mainnet.infura.io/v3/\", // Optional if `infuraId` is provided; otherwise it's required\r\n      chainId: 1, // Optional. It defaults to 1 if not provided\r\n      appLogoUrl: null, // Optional. Application logo image URL. favicon is used if unspecified\r\n      darkMode: false, // Optional. Use dark theme, defaults to false\r\n    },\r\n  },\r\n};\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    try {\r\n      const abiResponse = await fetch(\"/config/abi.json\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const abi = await abiResponse.json();\r\n      const configResponse = await fetch(\"/config/config.json\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const CONFIG = await configResponse.json();\r\n      localStorage.removeItem(\"walletconnect\");\r\n      localStorage.removeItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");\r\n      const web3Modal = new Web3Modal({\r\n        network: \"mainnet\", // optional\r\n        cacheProvider: false, // optional\r\n        providerOptions, // required\r\n      });\r\n      const provider = await web3Modal.connect();\r\n      const web3 = new Web3(provider);\r\n      console.log(\"web\", web3);\r\n\r\n      Web3EthContract.setProvider(provider);\r\n      const accounts = await web3.eth.getAccounts();\r\n      const networkId = await provider.request({\r\n        method: \"net_version\",\r\n      });\r\n      console.log(\"networkId\", networkId);\r\n      if (networkId == CONFIG.NETWORK.ID) {\r\n        const SmartContractObj = new Web3EthContract(\r\n          abi,\r\n          CONFIG.CONTRACT_ADDRESS\r\n        );\r\n        dispatch(\r\n          connectSuccess({\r\n            account: accounts[0],\r\n            smartContract: SmartContractObj,\r\n            web3: web3,\r\n          })\r\n        );\r\n        // Add listeners start\r\n        provider.on(\"accountsChanged\", (accounts) => {\r\n          dispatch(updateAccount(accounts[0]));\r\n        });\r\n        provider.on(\"chainChanged\", () => {\r\n          window.location.reload();\r\n        });\r\n        // Add listeners end\r\n      } else {\r\n        dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n      }\r\n    } catch (err) {\r\n      console.log(\"error\", err, \" message\", err.message);\r\n      if (\r\n        typeof err !== \"undefined\" &&\r\n        typeof err.message !== \"undefined\" &&\r\n        err.message.includes(\"User Rejected\")\r\n      ) {\r\n        dispatch(connectFailed(\"User rejected the request\"));\r\n      } else if (\r\n        (typeof err === \"string\" || err instanceof String) &&\r\n        err.includes(\"Modal closed by user\")\r\n      ) {\r\n        dispatch(connectFailed(\"Modal closed by user\"));\r\n      } else {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","export let addresses = [\r\n    \"0xAb66Ec57D13429D59038C119544041f09f2b16BE\",\r\n    \"0x5a8083a6E61DaCd5999Beb2914a457a51E3508d0\",\r\n    \"0x6946ae4360d19f4821e1009C51bF5Da1E50736db\",\r\n    \"0x0371139c891531c96CBf435Ef648Db0C391c2b98\",\r\n    \"0xC564d874447258dfd30488e3f2583d6bb9fB4068\",\r\n    \"0x59DB6845e6560Ae74B282140ff447391B24178ec\",\r\n    \"0x57E6F03Fc666B8Be4726819961AE78CFBb7E2fA7\",\r\n    \"0x07E995dA69985141FA8bb28264eFB27BD353719B\",\r\n    \"0xF089437C58f831e63CfBbD097fDe7AE01FbA2aFE\",\r\n    \"0xBCfb54c6A895CfD2f68044077D2AbB1271881921\",\r\n    \"0x2FcD2C4d1067C48f007362173ad139f9a57250Cf\",\r\n    \"0x92a9f884DDaD6acfE7C588D9b2293DAD5667E7E9\",\r\n    \"0x9f32918D164318EbecaFb190287e3bBDccAF3E03\",\r\n    \"0x9639d01559D4cBd45E26EDc743bbFd3AC3FC84f9\",\r\n    \"0x59Ec4479F33F640D13bba1Afce08c7C7F5feAD24\",\r\n    \"0xEAFAa6564D0A45ff4475Ae7338165A8553925999\",\r\n    \"0xB34FD18e01a5A42216E461582Fbd1e31B671EAf2\",\r\n    \"0xF2B004EF55E7084cE043223B226aD0922a5cEb04\",\r\n    \"0xe46bfc3ac7743e2d693d60ebad719525634e23e4\",\r\n    \"0x9798923B67FFc52C98bf2c60d5A4Ab88cD9B338F\",\r\n    \"0x3F8DAf9Ee87e59E2C3490c3D539998732eAbDB6e\",\r\n    \"0xa57A335a9BEd55758cAe084953A6993778aA9eF0\",\r\n    \"0x82e4C29b041d780D05a4e829AF826cFA347c3dca\",\r\n    \"0x8b97B078e64455Fa863eE4820CDa0846fAf75bD5\",\r\n    \"0x0b6d3F8d74a5E13D665EBfeE304bC08260E2Aae9\",\r\n    \"0xA888952074729CDC24aea471086B222256cd12A7\",\r\n    \"0x000091892804f655cC1ACA5BBe42944dbb972aB1\",\r\n    \"0xd509954029fc5F3f2E6DB42b7989e9cf65D993d2\",\r\n    \"0x92D54f87E1Ed5ca5A3F1D61ad7b59e27B0f714FE\",\r\n    \"0x8123eA5E180069138234F6c33fe64aEd9A2598b8\",\r\n    \"0xfC3C3feC4499719D9455218F44E46b9EeD42dee9\",\r\n    \"0x795394896E4ae3F373fcEAadbb5EdF859000468b\",\r\n    \"0x888b568c904eB6D844F2bf2821E3c346a52603d1\",\r\n    \"0x6b9Aed39736A79D6eADD8ad8E28fc70179CEe36a\",\r\n    \"0x412B8c2E66069143d9436b9607Ba45ad45adB914\",\r\n    \"0xA7bf6ead5bB5bD3e11537BffCE61B76c0244c778\",\r\n    \"0x89cAc0E09432A7B1d9a7294cB68cf81A637F6BcC\",\r\n    \"0xBCdb110BEd266C068B0FBf937e4701b07727a583\",\r\n    \"0xd772221fd404d76ee1f24abf89d4661773b5a6fc\",\r\n    \"0x6aE981FE6A51D17c4Ce150C58680e99740E6941E\",\r\n    \"0xc39fed6fA1301bD7205cAE82bb990440A4850B17\",\r\n    \"0x1C0a73429A98E793E448dc80c44eDaE80F21124F\",\r\n    \"0x6073b7411205d3fF4D3D8DcC52F01D3059c12670\",\r\n    \"0x08b22E0d817616Aba28f2592004ec1e3501B749F\",\r\n    \"0x67a32e5b2E3923f6575269b4F77055dD370bC629\",\r\n    \"0x99d406204d66A31c37F5529A8d3d866cCff18A74\",\r\n    \"0x236cE1b8e94dfe8280D802025E9D19Cdb9FFEe02\",\r\n    \"0x78Ca119812AC518a2684729942b407B70DFA90BE\",\r\n    \"0x41d5E37ab11A6C7a6Ef53757aa650fCD6e605E06\",\r\n    \"0xF966601D7150A15963Ebe43Df685b40caBB6ee40\",\r\n    \"0x1826Ec0A960FA1C0A076Abc4E9afEe83B16Ca332\",\r\n    \"0xa03d3f2757613EEb041210A9D41a7624DCbFAF11\",\r\n    \"0x637Fd60cc34883CAb05Ac8B3548c31265A0072a8\",\r\n    \"0x1965Beb03a1c87379619C6af39B312eccf24Ab0F\",\r\n    \"0x9ccdd09fb7CBf527d85D4ab9774B26f329b7eeCE\",\r\n    \"0x8bf2FDFC056E9e0442F52d58E3bcBD9baEB47a65\",\r\n    \"0x17c212844D359bcF31cA062d241dd4c67c55FA08\",\r\n    \"0xAab972c61fa0E9548949f2b086C1675d13c1deFF\",\r\n    \"0x2300CD4329c1332aa13E0f8Cf030208D2b3a9C57\",\r\n    \"0x0E7Af97e0cC54B0a572934B02FA3bA315b46E735\",\r\n    \"0xbBa1D8028cC2a942ea678e6fCBc17946784b1030\",\r\n    \"0x5c264ec0Ea52EBA19a5981Ba6738cee0F09818E5\",\r\n    \"0x3c3877c45727998a2c73CEb61DFF92d6315593a0\",\r\n    \"0x29E80B2A0325E6c6eEA4bCD2e8dF0CF7b46063B9\",\r\n    \"0x994fFfD7fcec0b7caf4642473F9EB5C1Bc9FB6BA\",\r\n    \"0x4cd71a84157087A27C675e24C807F79069dD0611\",\r\n    \"0x37B830e43b57461C480D49EF1A033174E7489401\",\r\n    \"0x180aefeB2d5aACA458302e7f380516A13aB6741d\",\r\n    \"0x76CB07cF9A8Df9aF582f6a67fB8D6fAdd3296c66\",\r\n    \"0x8717D9Ec73d71f68856FBae30997c7C1566411A9\",\r\n    \"0xDc54c1dA9066d6FFc92BC3935Cd1a004cF2F2740\",\r\n    \"0x9eA913f4C2B3b256E0d0175bfe834318cb2d5e1C\",\r\n    \"0xb3d07B07a1B22019B2dD50F7c1EA49408e52Bf19\",\r\n    \"0xf606507aE2E57C1c9CD67a0Afd2674160b5f3547\",\r\n    \"0x1E97A74bA13b5a5ccc937e1F8537DbF6402010E0\",\r\n    \"0xa21a328b2aaf5ebdf5e95b3872a5d3f3704eb90b\",\r\n    \"0x7E5f079d65F257cCb204851594d821Ef5007FD33\",\r\n    \"0xBfC259Ceb088fdeCeC0aC30BeD435Edb5feA2862\",\r\n    \"0x1869ac878EeEe20ebEa19B77ecE404AC528B10d4\",\r\n    \"0xc7d3e2AD7a2C712B355688B0022580542769D81E\",\r\n    \"0xb0222211E7F6a61a7E183b482D5f98fc16AE16C6\",\r\n    \"0xD89522b2C23137C356FbF9090341Fd74432FA4A2\",\r\n    \"0xD4E1A607d3Ba4aC49f8517f8cfE011b5fB57b6f9\",\r\n    \"0x111b863c2f7d1833d8f53830647c260169e99626\",\r\n    \"0xA9dc2C9ED998A193c03F8F112227c8e32ACc7DBa\",\r\n    \"0x81eaf34D48Ee1e093117c358699aD91497A0E5D0\",\r\n    \"0x9b4031ff0f233c296cb47e6803be2812bf3cdd51\",\r\n    \"0xd5810Eeca847C273c3b8204Ba709d7581F0a0c3f\",\r\n    \"0x3207a37ce3A8C98a038c77a51A73377a3B589923\",\r\n    \"0xE0124fe27200563a0b129E9f6A2ccA1c85AeAA6B\",\r\n    \"0xa340df41aA401984859F5c9f5B8b6330E6935d8F\",\r\n    \"0x161b2bC49f4Df4CE9057dEB5A78843f4Ad8522D4\",\r\n    \"0xfe4a71ee2CA5D40b920BE39ca42c06a55b588c9B\",\r\n    \"0x26d78D0dB14d2C8fa9611d826b4F72Ba4CE9eEaA\",\r\n    \"0xFb75Bc6d55d4c0c6F6240a08D0FFB4f33969C2cD\",\r\n    \"0x35e7b325F96cf228A500C96dfa9d62644240cA0C\",\r\n    \"0x18C3D24FDDf28a231389914c5BC5371e79D142d5\",\r\n    \"0xdfbaab5cd448ac5c6166d6072cc9f3c9bb473daf\",\r\n    \"0x62BC0C732385D794b4d10910aBE2D4F2B0a9FC48\",\r\n    \"0xF0358cA0fE57B19Fb2998A727DF3cdc07675b7D4\",\r\n    \"0x90c10329be8a41dee23fd481924b93bb11dc89b1\",\r\n    \"0x46E8314465811F528163D6e01724D39d800B4509\",\r\n    \"0x399b672B0B7a88eB0cde1b4592b5E7aFADa2cc05\",\r\n    \"0x0Bc36bd15Ad71005a8BbC17f25BA2339925e8ebD\",\r\n    \"0xE8e05364EAA14DDDA1583DfD2A354291e905ceF3\",\r\n    \"0xc2B79f0070e7983d1CB6a978321E50B12046e104\",\r\n    \"0x904B7eCa08f40f482086E55f64da90BD36769EF0\",\r\n    \"0x5fB998B8024E38867558fD5E2b87B6D13Da730f8\",\r\n    \"0xDc79fF68F761c84Fc4Ba13c4e9c695a6c078D637\",\r\n    \"0xcd32f12aDffda0291460f87D48D714bbdE4F11B7\",\r\n    \"0x6Ea68F8C8959D2B61F499B044a4871C4d7DF0B0F\",\r\n    \"0x30084DfbAdACC4fDaB83A0779b723f233d9Ba6F4\",\r\n    \"0x4682207b69575b9b03C71236E7c5659A73A70363\",\r\n    \"0x577ee6F9Fffa2469A0bb38A3c0b77B37b26e82f7\",\r\n    \"0x8aafe92fca2c3e93dfb52172eb110ff9dabdc395\",\r\n    \"0xddFF178979D01f4D77E0024c4163acF836D13842\",\r\n    \"0x9BfB721d218B7E49aDfeeD73c7DF48EEA057298D\",\r\n    \"0xE33B86dE16D652e96409Cf965147974Afc2e8691\",\r\n    \"0xBe1a2a86C38EA26D3cB7514EE28E90271421c91b\",\r\n    \"0x80b79BCBebc10fEfCa2beaDC39344c5B03c68B43\",\r\n    \"0xfeD4B5198142e4a560BBb268E043e6B0787308e3\",\r\n    \"0x01149C634075981d558977F16687FB0BF41E651B\",\r\n    \"0xdebB0426a25C4B12F1F0fB650786d1aa3Eb834bd\",\r\n    \"0x07F540903f9EC92aE3BC85a91742FA272Da32618\",\r\n    \"0x6b5E9D35CE1f5a54Dfa891D4a3d0Be21F26E1ff7\",\r\n    \"0xE5eCDE6Efe87D38c882d13eb3BaF1403B7f4D121\",\r\n    \"0xb74447e22dC19227Db3543B13e7aD89586cA3877\",\r\n    \"0x906D3c28dC17e47C71cC7cA712c8Df068dF396fd\",\r\n    \"0x826119962b922edD2A0b5a5F4D0D7E9392b63761\",\r\n    \"0x65824C6e7Ce07915d5661bc0625c8a361d525FF6\",\r\n    \"0x90c151f1Ed3656344D2bBa7E6B5c6f3A70F9A8de\",\r\n    \"0xF633276eE464bf850591df2b807ea1400b3306b7\",\r\n    \"0xA78E7B3d3C06565d11Bada3B899Aea03CA5CF1E1\",\r\n    \"0x93f06Bab5b537CE71b2FfE2f8873caCE26CF961b\",\r\n    \"0xdF967c1A2cbE28EecFd7034cEA7d52706d02e424\",\r\n    \"0xf8FBb9c014D9984337Fdd2914607Eb98bDA9c7C6\",\r\n    \"0x2F780893aF672a49f3fE5ab4df1D5733A674Aee1\",\r\n    \"0x5b6E57bAeb62c530cF369853e15ED25D0c82A865\",\r\n    \"0xA882fB71aA1967A6a8aa11375F8abd5FeE5BDD6a\",\r\n    \"0x89c7eEF57595EFAc8c02AD45A6C7bDC868BB8D4D\",\r\n    \"0x2DCDA1deFDf3C64285A6b35Dfe5CD4198Fc6259E\",\r\n    \"0xb21D08FbAAb4a1BFd2e3a01d3Dc8eB62bb159a54\",\r\n    \"0x51932dc1629B432232c07e60f96b1C6Bda70FC22\",\r\n    \"0x2C11C79192F1C497B6bb817D5aC90085BD519eBf\",\r\n    \"0x7d23ab0cA7D69863c67911f46B26d0d1D24BeaA3\",\r\n    \"0xde04afc10217b87bc3336815833fed0bd14236cb\",\r\n    \"0x7Aa98b668df98f2442E41dbDD5aFEB15520E4cEc\",\r\n    \"0xBEbe0c09065c3221bC854a46AD537350523f2410\",\r\n    \"0xC0E8cdb6381D2Ac831C471Fbd5692F0F941529CA\",\r\n    \"0x45aC530fC4df90E08D89FAe30f3419aABB3bE8ee\",\r\n    \"0x93e1FfB683A1F14b4DE54c0d077804DBD5e5065a\",\r\n    \"0x167D05CC6E91c40E7Eb06b9497fb2B6d81757dF7\",\r\n    \"0x669F7c61d431A785969883Eb946677B45ffD1e01\",\r\n    \"0x3747c0fa364488c95A19824814dD71F93a496162\",\r\n    \"0xD8B764aFA06c4Ba3702e6892040d6029AA86Ac76\",\r\n    \"0x3caff95E626cf2A6F8B2Cac5Bb8DdEf25F590dbC\",\r\n    \"0x5bAd4dA29256DeC1551b197332d8C24E2750E3B8\",\r\n    \"0xd3BD47cB5D47a47388103DC3999AA73685e43638\",\r\n    \"0xfD53B0ac17A83D9198244A2c9cF2A9331046De58\",\r\n    \"0x726820DA5BFd6c04718e5e8FF5325b94Ee9b3908\",\r\n    \"0x65dC3a921613e4EaBBc42897c42B5B13EdfDDB2C\",\r\n    \"0xc45B0f3c51c5a5292C36079B65085A84Bc3d8699\",\r\n    \"0xA06811CCA932ef48D86bb893E46e58740f03de5A\",\r\n    \"0xb0aBF7b22cf94FDAB991b8f17398a405a94701b8\",\r\n    \"0x3617573A10ef372B67bfd9Ff2ca7F22bE4160b7a\",\r\n    \"0xC64f996f0C8CFE65f90dAbFC9C93ebd1e662c875\",\r\n    \"0x3CF5FdC327Dbeef3F687D935B5e45a38376Ae244\",\r\n    \"0x83408b69AAbBFA26f16Cf406867d39Bd9f50D6AC\",\r\n    \"0x37f6Ab65Cf0D7E60557aFeD1A42142320e0361D8\",\r\n    \"0x8B6A413FB3512b1e56a175C89C32587bC23d91bF\",\r\n    \"0x64dCaf7AFe9927A27f633899e32b02990070Fa66\",\r\n    \"0x2a3B3AB29E88310F48739E77D008DbB0940c01A0\",\r\n    \"0x22f354Fe5F4DA41dCc018C993E7379D26700C325\",\r\n    \"0xE5344C65bCeaAD72615AEe7034719D5d5c3E47C4\",\r\n    \"0x2FAE76f23C24fc0f688F35079261Bff3651336Da\",\r\n    \"0xEa9EeaE46B58f0C9bdc0a08185f2b4821b8983D4\",\r\n    \"0x4b5b8C41940Ab49b8211Af3C55cB70C546cc8439\",\r\n    \"0x8770A1467194677DFdD7deD7952CEAF0C9e97EF1\",\r\n    \"0x9e635293C11f5f30a5c581D334449c024099AE35\",\r\n    \"0x5C00CF6d728Bbe457C01F38B07343D528515b930\",\r\n    \"0x01dafd77d7fbeca647acb78b45bcf60bac8da757\",\r\n    \"0x9C7F968e5093B7618298C8ba384236aB0EB768b8\",\r\n    \"0x8Ace24CB34179F1f860AC0439154DCe56488b5D7\",\r\n    \"0x0058Ba11e7C290498dB7F3200A741efbbAe9Ab22\",\r\n    \"0x4D1480d245FCEa63C86bEe65b4D282f93eFd8354\",\r\n    \"0x4460a4bD792585b7b1290A1e5C10A92D71d2d8f2\",\r\n    \"0xC3a46F2329e18c576ea92d343274756daB1fd75c\",\r\n    \"0xF8A596004D8808B0cE28dB696Bd7F0BFddbc1744\",\r\n    \"0x13C251848b7aB08CEB852ea9C41aBD7692eFe866\",\r\n    \"0x3c6B59A5AB5C9b98A515A1482cC8467f6cD34E15\",\r\n    \"0x3007Cd5c5905b1d8fb779B86acDEDE1Be81f2dB2\",\r\n    \"0x263231C2731209eaD9522c81216cBF2C7832EA99\",\r\n    \"0xe608A9dd634EA5A29EE9F092B6494d42d3c4874F\",\r\n    \"0xb03e89d88a7A493012DE3cfb8DaBd7eC9bf220cC\",\r\n    \"0xc12BBF1e1f6289822b0903103777F7DA015F7c94\",\r\n    \"0x89f4f1BFF33ecf14093241b2E1BCED8fA705D50c\",\r\n    \"0xB03067F3f21c3F3f49B1FBaB51111B061BcF706c\",\r\n    \"0x4Eb0E97a0F228C82f7ECEfD1E43e933267C5B8b3\",\r\n    \"0x540bbF6A9e195398802F42552b3089dEe5d7Af60\",\r\n    \"0xb640efa7BAFC3C83526b6863764D7F09aFD9eb79\",\r\n    \"0xCF95cEc457A16c3F2e7c3205dae53526eeCAB0bE\",\r\n    \"0x4941c1FDa49ffFbe82666673e4a5cF0Fb33094e6\",\r\n    \"0xD1ad6B763707Cd28203e513a2e66e4564C419436\",\r\n    \"0x1e92C7B70Bb5F0298f7CEb32a7B9C72A4dcB69FB\",\r\n    \"0x20B3A40D948F7F8Efe0EEf35876c63a95984bcDE\",\r\n    \"0x0522B29D93c5dCef964917952973bc037f4EA0F8\",\r\n    \"0x45c764672F477B06bCB5d58E7827dD9Dd696323b\",\r\n    \"0x1243d2e8c086F5e36aC9A57791c8529fd5084c08\",\r\n    \"0x5278Bd8fbB6a3a63E26aDaf8e79866dc7dB4C434\",\r\n    \"0x7E5B194aEf5E0d2D1A43D6c99619df86f2F92576\",\r\n    \"0x8fDF5fe82862dFCa0693862F1f2B30b7732a2d4c\",\r\n    \"0xA68521184a96f8FaF91f85ec22207FaAd43567ED\",\r\n    \"0x9d20F0DC62B1fa0B3148A842c9366d4F9bc29F88\",\r\n    \"0xBB72597d615472c0CbcEF2b4b18872E50e6C0e02\",\r\n    \"0xdfC5Ce8ED7C20C96fD61955A6570A6503f3Ddc7C\",\r\n    \"0x93107B05Ff39f13386eB5914DB1C89AA50a9686F\",\r\n    \"0x90B1485EB4280eAE87428c79422B36E4B5738fD7\",\r\n    \"0x1F62c44463dB19c872067A7D78ac433e5D2C2875\",\r\n    \"0xEdc26bbAf10aa56B43EF63B7b9E8a0EaC90B282d\",\r\n    \"0x5619563241aEc88AF177B3Ce754f27C4F684c03d\",\r\n    \"0xF59BC29ddB7185b67e828de7713FD68b768e6ce0\",\r\n    \"0x4b6d0902863CB0a7f8e11905F78c11708BD9f4fB\",\r\n    \"0x4Fec2F5a79b2b9D880A46BBc30697267A45a6E93\",\r\n    \"0x0e55C20d2BC315E879e602A1da70cdF46EAb57b6\",\r\n    \"0xD503CC5BFEE645F5f9Da5247D183629C044aC935\",\r\n    \"0x31c55f64cDd0dcEB6A3ce2174044ad9350E2c337\",\r\n    \"0x196E7fCDBAc95D1538B2736b678a4CB924Eb3e2a\",\r\n    \"0x7a43Ba6dd50d7d352bfeA2846B30A6Ddad352354\",\r\n    \"0x2A601ef48F4feAd97622A971b74Bb13ff8D34821\",\r\n    \"0x73a4f3Fd8EF21ffe04d01393F52858025E3c4362\",\r\n    \"0xAc19097A1D482dF3721EB8C2E9b71748a9823F0C\",\r\n    \"0xb6e9931B93a83331Bd9Be01F0Ec789925c9ebeEC\",\r\n    \"0x369615Bc57975B06C418f42d3FDA3754A385B97b\",\r\n    \"0x6941C343F3d66Be5F9F25474ED95Bd04ea90fA69\",\r\n    \"0x77E863e4A39A7519E800362Fbbc37e5BaB47D36D\",\r\n    \"0x6868eA537d571DB352857533Aa99005C7D07559a\",\r\n    \"0x259c9B7a6D6bA8CA30B849719a7Ee4CE843E4DDE\",\r\n    \"0xf4bdce8601690808643e29F9B01C3B6932aa05E5\",\r\n    \"0xA4819B7EcfEa55a624624c88F94c1b238e43bDDe\",\r\n    \"0x9f7918ef7294cb0e2FEE6964Bfa4b5D607581f6f\",\r\n    \"0x2a69f834f5b7b804719573bD829096608d6d4AD2\",\r\n    \"0x2Ad5a6Bd95d37B3c82310a97c5C90c5B86c88D6B\",\r\n    \"0x41e6732F0bbe183EaA772F75BCAC2398D817B95F\",\r\n    \"0xecaEBf8F5A28A6EF322BB5428c11270eD057C497\",\r\n    \"0x5117B71A7C72a860B6fF3069fE99726aD656D7fD\",\r\n    \"0x4e03D94D2d95DA08b66aa071Cc45393346C4535f\",\r\n    \"0x2FB9A541037057fE22239E7c2a829675500a1BcB\",\r\n    \"0x688847Fc6Addd42F176080ed2081BBb67c276408\",\r\n    \"0xB721523d2588413e1CE43304AB09c65F7F8A5FbE\",\r\n    \"0x1338901827e3dee9506d0514F7746F306310F488\",\r\n    \"0x48BAF3dA3BED7ED1bC547e260c058254B3AC4c3D\",\r\n    \"0xBEf48AB1c1502468cee6f78CB0425A699C67FF7C\",\r\n    \"0x5a4597D8439bB729Acd163c1234a6f2fA75Ec547\",\r\n    \"0xd4200Fe3A594BB675559eb5843032Ac691Bca2e1\",\r\n    \"0x2210b4d0d89808a6032017c1F1801f2fCA1a57bD\",\r\n    \"0x010B53D0dd81922E76efe866058d42625566DA7C\",\r\n    \"0x16Cc3b2b4cbBe56a4dF107eC4946CE3AFA009AA2\",\r\n    \"0xf2DC8185cb244a425Ad325dD0Ac1819109e18714\",\r\n    \"0x484ADef8f940C01B79F8603685CCaEF84c259B01\",\r\n    \"0x8ba73dAE9F77eA1003b6493F8Ca6409398d8B33D\",\r\n    \"0x908E9B328Be831E69Ef577579F33a688775FE684\",\r\n    \"0xac7F43980FE846D4B49EA9153F38feD690877293\",\r\n    \"0x2734EAE33eF5295F3e6754b64D0e5a8e80711979\",\r\n    \"0x9427E3394ee752E661C5e4517327FcFb6562B111\",\r\n    \"0xD470690F1E22Da88ccfbC5F1DFC8bdE60276DbD5\",\r\n    \"0xfaAD5397492a804733654272C6C3a37cA34d1Cc0\",\r\n    \"0x608f0cADe420e14B35B6F494867f302E78149d8A\",\r\n    \"0x6E4955C23e5162b1a8BD11f7763b992B964e71F6\",\r\n    \"0xbCcf0432b7711A03Fc3DAA806Adc05A642EFE9fc\",\r\n    \"0x34d4EAFEf4E2072476A65522752391E84533b34B\",\r\n    \"0xDb16426B5a091b1eAa16F9a2BB6BD27DBf4244f5\",\r\n    \"0xf195Ae9369CaE55d585fd839ae9255B11c06b455\",\r\n    \"0x460af92D5E48e72847362fd8c1726b470f753027\",\r\n    \"0xc80bF3a92757C40e3aEAE212a647abaC3b3DAC0C\",\r\n    \"0xDA82543BDE105af57CEE4E7B81cDC150B6F7D1c9\",\r\n    \"0xc6E3af70920FF6C9D9E6F942B46A6C4DA4BC9579\",\r\n    \"0x1E669eB46a79dD208EA2aAB6fC796C301bba1CE2\",\r\n    \"0xD4dfed3927800E5F662F4C7862f5744F883c6139\",\r\n    \"0x79870e0F0C7dFfC453c99aC5bdB207cFc6b7698B\",\r\n    \"0x1b9BE49Be2A7bB493Ce829dbdfe3a4780F239e22\",\r\n    \"0xA3fF198706E8f2F5276cce011c49022129af56C4\",\r\n    \"0x4dD0B42d6a0B76A8deBab29EbD4652829D310D25\",\r\n    \"0xE8e5F604D95Ad38fEfD6D47F35270e24Be4872D0\",\r\n    \"0x6637C7Bfdc61359fC8E9c48C68FeCd590cD4d4Ff\",\r\n    \"0x1CB1c4b0A13B5E542cE3181C1dE845396e967C5a\",\r\n    \"0x968c7Fb6da5684c60FC4AFC5E993b502a0085DEE\",\r\n    \"0x043145A2bf34706451D7653684e9cb2c5FFe7aAF\",\r\n    \"0xb1CE9A430CE0fCc7EaE458b21fD563E4F70E3520\",\r\n    \"0x8F5c21244e40186EF0D1Ee53Dd78C98323b57023\",\r\n    \"0x02A4A631d7E139a9Ba8dB94C88d3553AAF053eDa\",\r\n    \"0x2eA40d7bB217aA713D7F7cf3d92970c34D610830\",\r\n    \"0x7f46e9e5A7BAf6Ec3780Bb8578c540a42b70d623\",\r\n    \"0x2151d9BDB6cae040A8ec852D9BE29D3F47a6959C\",\r\n    \"0x62391dd9b744E3f766285C63CD2b503e1b1B1223\",\r\n    \"0x622c3F5C509A8F1319BB5F851E7b609628D43b95\",\r\n    \"0x7FFedDB3E3b6b87D6288A156650C12C231E5844C\",\r\n    \"0x59A40c6A6f9968bf81A046F3755e83C8890CB51b\",\r\n    \"0xa0F33434e8C9FdEBC6e459e1b4c6fa21A209Fc8B\",\r\n    \"0xE9E34dB238a703d9AeE1820252685E9376730d25\",\r\n    \"0x02eA463Bbfe54b49A401D0F5574fcBCc600F7a3a\",\r\n    \"0x56e1b883a7ee8c948d014aF899E2710B8B89dE6d\",\r\n    \"0xed02852F2a217136b5eD016bC9d2EB7829bC1fE6\",\r\n    \"0x5c9DAC7a615C7152C88FacC124446DB3995488D4\",\r\n    \"0xC55C754b9F11198BFcB5b6f1315D47DaADa0C4ab\",\r\n    \"0xf40769Ba82883a3b6d41b81D71a68Ab54D7732f2\",\r\n    \"0x3D71326c244514e89ac5CCd5ecec847Ff42537D8\",\r\n    \"0x4bFBFaD0c46BF22e5b053963007605CB0618de55\",\r\n    \"0x3E66985be092ac11d568573b020aB0103A1A5b30\",\r\n    \"0xCda54f82379d6d33B2a761C0F7F5fE248DD87710\",\r\n    \"0x3fD2d868Dae0Eb0Bf5518127A87bA85D8c23711f\",\r\n    \"0xCce78CCA6539a8F19079391F69535fEF8941C59A\",\r\n    \"0xC76bdDE6dC99Bb24087400cB42798578F2B6b68F\",\r\n    \"0xb1ccff24dbd6aa05c258915e8903ba0394ddec04\",\r\n    \"0x9c4f52cf0f6537031d64B0C8BA7ea1729f0d1087\",\r\n    \"0x97f1e696Aa18226bE973B7E077c40f758313f3F9\",\r\n    \"0xEEA182bcB130390ED47B6428dA67B92bF30FC9Bf\",\r\n    \"0x01eBF4555eE8CB6AD175030ED9e31d38405BDaE8\",\r\n    \"0x1AAF9AF7b8815A932a2F49709A75Dc19eF5bDe7c\",\r\n    \"0x5Da07C2959C9815FEcEaC21FD7547C7E684c2431\",\r\n    \"0xD7F1Ce3134d3C330F75a34ce415dbDc905fE6914\",\r\n    \"0x5D5Cc8fab6003CC912Db719B628293860aD06cD3\",\r\n    \"0x395d8B1Be48bD9C6651233Cacfc6562022b5EF6a\",\r\n    \"0xb2b73C097201c002eB8E387Fc206CDBa9A19bfCd\",\r\n    \"0xe976cb353685b4ae0518e15959495255dfc83458\",\r\n    \"0x94e8b6295be681a2C4DdAD11F501E0fE9AbB758A\",\r\n    \"0xa4Adfac959df52Eb93205AA009c8a4900fA81aF0\",\r\n    \"0x2AC6f6702F5D685a69258283DB04b8BF8494f58C\",\r\n    \"0x5080e1877752eB0faD2AF32293C314d7E007c4D0\",\r\n    \"0x6FE96e73Ae9BCF2B5cd9043eeB0DaBDdbcC1D369\",\r\n    \"0x6a8c449D05aFDAA5b3241Ad44E48e25D324178D5\",\r\n    \"0xbAEe2C4A69dFe928523a9a3E7293D09c0699F002\",\r\n    \"0xAa18c025f792045e64dAf480345E7e7aB2C1826C\",\r\n    \"0x6A7CC5E205BCe058454e1576419f3dAb1CE21637\",\r\n    \"0xaD25E0585f3CE763a9A95aB3F91e58f345dC2106\",\r\n    \"0x40BB8ddE11FD49546B6113257988Bf20560f2eDC\",\r\n    \"0x8f2df56bCeCB03e9118a8c78b454e7eCf1592872\",\r\n    \"0x966C8346f62179f601d5ACf055e6c89E43D732a5\",\r\n    \"0xeFCe60762558E113395d48B58E8567c556D36f23\",\r\n    \"0x33E2f86Ab89Bb7D0339b7087d9f572b5a088CF82\",\r\n    \"0xdA01b6Fe8E18c93a83Ad42a75334a2deBd8167aF\",\r\n    \"0x4776Dd030F4Cf856168b3E3C9183BF6Ad2e71719\",\r\n    \"0x0955F4f029fA94e3492b8F3c3b7Eb822D91Af59B\",\r\n    \"0x500EcB70D881FF656780aF6b753589B43d1c8bF6\",\r\n    \"0x0731F4425355fD4DfFEC8ae1053a82165c2A618B\",\r\n    \"0xFC5DB4D93eb83Da7C99397eaC139f75979eB81b3\",\r\n    \"0xAa59BC73b6e4392d35CFA1EF9a1ef717d673475f\",\r\n    \"0x9a064C50475b81666aCDD0E1cE9CeAD78317B070\",\r\n    \"0xCf8611B8D714A7C7c8B607bf3C70CF28ed1C70e1\",\r\n    \"0x7c4e643862068a8383a5fADC7B11069Fe3e19CDd\",\r\n    \"0x112d62B9B1DeaA943e8BEfB7270A9167c7b95838\",\r\n    \"0x45552e83823c69B56E71a3dA8C7249c9Fea0999E\",\r\n    \"0x4653a3BBC69840c9bdFAc934a8acC48F8ebb92b0\",\r\n    \"0x80e6Aa4FACc39db73608181c22fDBa8D4279eD2a\",\r\n    \"0x1013604e012A917E33104Bb0c63Cc98E1b8D2bdc\",\r\n    \"0xCe7FcA54C0F3221888Fc5c3Ed6AaB71b5624273A\",\r\n    \"0x8A53b410031c6C606CD495DFE1F3e65003dC384C\",\r\n    \"0xF77649464FC34F3dC7717B1801300418A90e944D\",\r\n    \"0xF0eb59C434d0BcF3F732f88251f1D6c7f7457048\",\r\n    \"0xff44Aba09983298da03E12dbF3F3a43356A5C1Df\",\r\n    \"0xe630Aab061f8F1167b79ce5838a2cc5621576552\",\r\n    \"0x075c98d458EF572e6C52feBd0B3D5213aAd0B1C8\",\r\n    \"0x53320F1035EaabcF1117084a8c4cA67044F37E8f\",\r\n    \"0x74e18527b2C6d406cacCf665CA13DC2a74f19B20\",\r\n    \"0x62B4bCaFe045048916632a35A5DF563790eEBf81\",\r\n    \"0xfe7688fa1ce0894d3bea24602782f548c84ba39c\",\r\n    \"0xaB47E1c54dae88D2140c3F2E2aaBC535095a1A21\",\r\n    \"0xafcbc05B070fc9408842828Da1024211e445d523\",\r\n    \"0x7CC127B9B3ea75e71f2Ff3924d3D6E089D6DC6B2\",\r\n    \"0x8b17Df00d92D9a2738c4B43Eb80002e4eD6ea38f\",\r\n    \"0x97A11A9fC1dCE0B1dDc3ED01dFA7D71806d9C30A\",\r\n    \"0x89516920b9F701f833E40005aB6aB86b28f39E31\",\r\n    \"0xa0c6B2b319D9239C4eeE850aF074C845acFf0A30\",\r\n    \"0x2fa7DCBdb8F08038E9EA666dD1678D66a90F8d50\",\r\n    \"0x01792159Bc843Bf661b94e2079123b31E193007d\",\r\n    \"0x52083cb1397f83ACe56A26980D9968cf40e524b2\",\r\n    \"0xD760890502251a18062D4f1F1486f1a1F9755DB6\",\r\n    \"0x74b5cf7d83722bbb5eb788c22e9da5562f3794ec\",\r\n    \"0x4ee62a58368159fa2e4bde24a76adc384f69ac4e\",\r\n    \"0xd79a9865F5866760B77D7f82e35316662dEC6793\",\r\n    \"0x2985b2C952Da8840Cfb0b40fa44203B9f5C17cF1\",\r\n    \"0xA0B784d0Df6eaE838fBCb7F7bb13e81de5ec1F03\",\r\n    \"0x437c80DE67A9A83fCb20CCfb147e0E63F0b33E5C\",\r\n    \"0x8d870B49ca41FB392b1888d6Bad32af40DC90F06\",\r\n    \"0x0AA4E03c8F8Ac3C5E66045a3ed41D31F9851A133\",\r\n    \"0x9076FefDcA73ae3FBC1fb63b85C2Cf8CFc36dDC1\",\r\n    \"0xB322f8E556e11e75b99E5498e7800ebC97A883E9\",\r\n    \"0xdDFaf72A95ed013967fbb7C6BFc28067D67d8eD0\",\r\n    \"0x710aF82349C0D972481aA4b80303723093a63DEe\",\r\n    \"0xa137E571d0dB7E29F216C09CC1E421DaFf76b54b\",\r\n    \"0x6a3abF9596f2C86fF0618fd790CA6f8BE054aE37\",\r\n    \"0xFc93669c09De1ce5c0b1c5C96739134392A2B76a\",\r\n    \"0x113C30859b7943cb9a925D9400dB4e31369017D9\",\r\n    \"0x6d8d5116f19b9f08f72294f3218e16B32462384A\",\r\n    \"0x1d1591b90d5a3d33c8284736054389c0287ea609\",\r\n    \"0x171cF6D15520682F2D1D3bc81dF2e377FdB1BB7b\",\r\n    \"0x4b47B59c5B8119bB7AfB41361303EF0f1C1D662A\",\r\n    \"0xdE261A57d1Fe1F1426A0c47A065F0E07170419D8\",\r\n    \"0xaA1d2C8BE4522A6B68AFc9D17471eeBFF0ac2298\",\r\n    \"0x3D8F6d0eC02147bcD5ec5Cb0550A4C9f5daC6161\",\r\n    \"0x456f6e34aC23EbF3478F3AdE23c7F633C81bD461\",\r\n    \"0x30B9C0a667893550905a6C357Ed6c7328aB0D402\",\r\n    \"0x975B13f12adae0eBC6DB86631fDE4bde13067827\",\r\n    \"0xf713727729C8dae3F2772517E5D1A8a5dee6E3E9\",\r\n    \"0xA57e816F11C113c6E4118AF5F3E5e79428DD1F61\",\r\n    \"0xacDF10505f77d3083816e223EC4c5f57dAe7008c\",\r\n    \"0xb68FA088Ee588E8d2d119dF4cCcfFc4523BBf124\",\r\n    \"0x9451c8b445ca7a3c20c0b2d13a3b0697b132f6ab\",\r\n    \"0x420ED6689224182e1d932272BBe2c4372C015e0f\",\r\n    \"0xDb9aE208B6d9cbBe1d683ffBa3F461449Ad11fc7\",\r\n    \"0xd741d9B693140c1A4F8F5705DCA6461Cd6009438\",\r\n    \"0x90a198B6b02eBAAB43d0a7Ef205EbAAc4fB1DDF2\",\r\n    \"0xE0CdfD01C0805f9AdcC14CAf408459f7A4744469\",\r\n    \"0xDC1d176582F9331068336F8b14276279d42F5e4a\",\r\n    \"0x578DeDd91786C6b7989C87539729b6F4D17D910E\",\r\n    \"0x1F0813301572B2A0f1a407DB6EF9D58ABb871a55\",\r\n    \"0xa8e3a061385f25a7f6b4217Ba73D81c76f21B0DC\",\r\n    \"0x630926986260A11cfa8d4EF7B4aeE03d5D07731A\",\r\n    \"0x4B300A87272db2ca1b30d21d64CDd345C4b80AfC\",\r\n    \"0x1C31D5Bb15e2612DD4F5cEF87Da416Cd6316C0Fb\",\r\n    \"0xfD1E5bbe6A9db488dDf192Df188b80efc3f2c32B\",\r\n    \"0x2a95c20a1e6f6565C3335cBc6FE4ABEA1512B9CD\",\r\n    \"0x49D69e3997B30d8d22Ea7CF589a0dF24Eb48362C\",\r\n    \"0xec27e34B4edFe4FC00f384ad8E59BE4251Af4B65\",\r\n    \"0xa683ab8dcFb994a4036E314280e13EA972a6D768\",\r\n    \"0x6B011a15Bf0B725D04f905AD595ca5Fd791694D8\",\r\n    \"0xF9812c89d0FF3b28233F458beF281D4264390CCf\",\r\n    \"0xe125E39395987043309c20fa82a66cc922079D0A\",\r\n    \"0xf4e7E6B600286fFba8154F5125420A0F78DB835d\",\r\n    \"0xF0e843A3024c632ab7afC675D5e5d82eADb5556A\",\r\n    \"0x98D0c797232Ac4abC0909C411e55BE0D4d36e76A\",\r\n    \"0xcC6f1321a0D1606B1635d9a31AD7F489A3ec2537\",\r\n    \"0xf85d8406acbaca3c3e69b2fefaeeb050c427337b\",\r\n    \"0x10d088B3eca6aeEf55Bb106432c6C4D0b90cA50C\",\r\n    \"0x4fB5Ae963c4fDa03D98Fc3ff8ff287FDF49dE548\",\r\n    \"0x136e5Dd0214E83e07Ab73cE6666335ea39BE8fB2\",\r\n    \"0xaC881a3d1795cE4D4F4cF1B99F5c69A75A220Db3\",\r\n    \"0xf9091Ba435A41F0D461d896cfea6F5E78fFB475e\",\r\n    \"0x977149B447c0e469000fBf1d3ff83e15A1F09539\",\r\n    \"0x1fB7cd5e56164c9FdF57C199BAa8F38f96588491\",\r\n    \"0xC994511bF261d1E816590B658bD9A3eC58AB099D\",\r\n    \"0xE0fF7cF41b1EE9e821d385EF0d1ee86F236831c9\",\r\n    \"0x4fcEb024Bc80041C9d330DC0ACB418A992B2Ff13\",\r\n    \"0xEb81D8EDa46afcCBB3D8cB75F39e1fc0a2410A42\",\r\n    \"0xE64d73155F955e4E56061032f013B066C8C5B0eb\",\r\n    \"0x6F693bA02a24d101F7Da2cD218BBaD8FA919b4C3\",\r\n    \"0x7c1B9FaABa8761d924D3e6FE62B55060A2898f7b\",\r\n    \"0x8B5D7033BfD45407f24D3Ae68f8DB3155030247c\",\r\n    \"0x4927C03479d24844D706CeECE089877D9A260A85\",\r\n    \"0xFd5c522daBbA6C083105bED7353296486b051177\",\r\n    \"0x79Af3a4545F1a441Ba1C95AfBB15a1521d86Ee3f\",\r\n    \"0x507b1be7d2c757a944ef15fddbfc8b66e678894a\",\r\n    \"0x5370078497fdB00204CE3289189962D392414F0f\",\r\n    \"0x1A7E9824F326A8312fF138B32921a2dB3F466cc4\",\r\n    \"0x5CbDfC6cE59ccA2E70e9FA90d16d2f481ACFeE54\",\r\n    \"0xC4940708Bc16Afb2855dc27241F8db06eE0A658D\",\r\n    \"0xCeC63C49a3Ac904d20F74DC44e49e2aBbf9cA4B8\",\r\n    \"0x111077A75C47E2beEBeF34cc844Fc819f2101B01\",\r\n    \"0xAEb8BA92FC503f8F2EeD2b76AA6aF1B190A4A36D\",\r\n    \"0x45F7523E75D04d7E934538A8A295C23f352f36C1\",\r\n    \"0xF4F0D1E9f26eb5F50732387Af417E5e690aCdED7\",\r\n    \"0x03E608f05B8f7E52dF5314923FF047bd700A84e2\",\r\n    \"0xBC35670d0ba21Ce20b70fC8a55aF259b69D14da2\",\r\n    \"0x56fD6b2daB262d4355708565A0d694294B53ec21\",\r\n    \"0x566DD5EE9db4Ed28e507e4c4764c70B27cdC72EC\",\r\n    \"0x268aE15513ccFB5e607B7070f9b9Db2e555A8a34\",\r\n    \"0x39e0624F7f22129eD446DD9e1aCb92DCf24B1386\",\r\n    \"0xbc3A0bA25F84102B25C877d2799731A3296C160A\",\r\n    \"0x5dC70A9b884f78Ee030a8c6ad3b3b7dc10Bbe7f4\",\r\n    \"0xd1b5728ed72cc49E1dAB3B671e32eaE5D05A8568\",\r\n    \"0x7Ef1f7bF886385447971c43f835a2DB147e7D928\",\r\n    \"0x2bc94e2025f4283569D42Dfe9Fd40c41477c91cd\",\r\n    \"0x3177E76DA1f1474e22d6EfcEea2B9D8D0DFc5aAC\",\r\n    \"0x4cE945DBad25bb06Df3F5c11FE8807AD11Bd8227\",\r\n    \"0xEE9d511ccA307164bbFF827CC1f925b945A11a21\",\r\n    \"0x79998A480c36c9d633f817e0De78b13E98A5d147\",\r\n    \"0x33F187285302C27040BF13Eb40E20Cb637975963\",\r\n    \"0x56c57626Ce565642D7e2166ed94bFd41e35A794c\",\r\n    \"0x0F382b4c13853920AacaD39771e869f7db1b8FFe\",\r\n    \"0x5BEB15Bd30407742Cf284D3061F6210319d58937\",\r\n    \"0x0c59F702CD76C813E342fCD57e9C58859Df0C336\",\r\n    \"0x82c9DB3da6DCe91be5246DD7Fa128253c997ff84\",\r\n    \"0xb7264CacDDb78108170195A8b2784B48AcCDb43b\",\r\n    \"0x720Ff27ee0Cae603D54c915c2c2aAe9E467a3Ae8\",\r\n    \"0xCb6896a0f3Fa077d2F2ceDA2a3e9C68287a4D260\",\r\n    \"0x4A0b88313a1D609061587989F75CEC5adB34d959\",\r\n    \"0x91D0f4f503F035847ea7A7879451F909BF462fE0\",\r\n    \"0xEe42a6794eC3C9Aa00c307AF10c161f9E3503BE0\",\r\n    \"0x04AC3a84Cb6daa769876e11a92BE676fd9049012\",\r\n    \"0xb96b928cb5a26bd3e5ae13c1de0e987f5b824778\",\r\n    \"0xb4955569563283A9eb3583709cb042ce80f861d6\",\r\n    \"0xccAbaD70Fa0B9f67E32B53ab24f2e34efff46312\",\r\n    \"0x6E97215750C3441fe832099fBa556ffcfb64EEe7\",\r\n    \"0xe68936F551324732B3CB4f1598344635864A8888\",\r\n    \"0x4E7c45aA38d7E8C8F831B8DFf83A70C43dA6cC01\",\r\n    \"0xb4Ecb79D14FcEc69BaB4375ae341EbEeE0d4d85D\",\r\n    \"0xB050e0ac5FBcDf2Af5985BAD8FdD8E40daB79e0D\",\r\n    \"0x8601B416b3a4fB8F7dDCA08AAaA4916aA8B73741\",\r\n    \"0xfa8Cef92350fd4ee38971045d2C5Ec63031C1330\",\r\n    \"0xe1619C13b22FcddF81287C2D8d7Cc73FdD8Ee6C7\",\r\n    \"0x55d25503d312AaE284f63330B6E01096eEd5B9DC\",\r\n    \"0x6eEbb4AB4b7178BCf8dF605A121685a3288F15Fd\",\r\n    \"BEDut3MF7nEpGerUoSZvefz3ZEV6qLfP2dSi83WyKZJH\",\r\n    \"0x9F33FAF0137607E7DA1039f7B2e10a95b128C10C\",\r\n    \"0xA03FDdBC248088E52f2e572ad11a1370572934F9\",\r\n    \"0x043becBbC68Ffd42A6f2F519D300CBb8F7c7dA83\",\r\n    \"0x18274402EF8fAebf4A93781a3764E8C38564ef80\",\r\n    \"0xACef3646c0A1187e64F69ca7d340f255Bf87221B\",\r\n    \"0xF6D13063010D6e5f7352cde78133715449a84E83\",\r\n    \"0x3431393bd5F0ce22A3d1558D3f073F01205Dcbfd\",\r\n    \"0x735af476bD3f72f910EC9d9DC551D9cc847BC229\",\r\n    \"0xA184753c9481C02a4EeFa97A02C492b8f9245015\",\r\n    \"0x23a5a13265d969118384Cb0f10f3085a8C9b0624\",\r\n    \"0x699a4Fbf7f094cff9e894a83b9a599B03b2723A1\",\r\n    \"0xbF26AB9a09492703FE49fB7E0ee57F6Bb04a343B\",\r\n    \"0xAcd7e2577a22b57B91e101885919501B9f9869aD\",\r\n    \"0xfc9dc897B99A97C9CF52f7B7230a533E6f8B6553\",\r\n    \"0x62B3c9632ecE043bd2741c6a3b28e4764Ff6D380\",\r\n    \"0x69dB560ab3C271369c330B157a5bDb5619d06d15\",\r\n    \"0xA0D023AcA5A347934a80310Bbe749312E84F89fF\",\r\n    \"0xe61252912c463f9A6e083751948C918d37243b30\",\r\n    \"0x17bb250e7830041857ed026738250b69b97f10b0\",\r\n    \"0x685408262D49784be403455aE749ab0b81D5E110\",\r\n    \"0x40EbF8a762801D1706D9D16A8abFEc4c452d15e5\",\r\n    \"0x3019683DD837Fd686002D87F8468372CC1B02124\",\r\n    \"0xe5Cb2baAbB3C7d91C2cC89CDc99299f1fb094296\",\r\n    \"0xD9b1D215A1880248d36e90608daffa449543C0fd\",\r\n    \"0x3EdA8B0228a6512A59279D62fbFd8a5F4257C8Da\",\r\n    \"0xb2575a0b343e28b681f09b7fc64cade534615ff3\",\r\n    \"0xe2eb9f7Cff8890C2E49Ee9B0F9E3BB918f8e95f5\",\r\n    \"0x3201fC1293F5de5b3176d168ca5ED8644431638B\",\r\n    \"0x828206d8B8538a322Dc3b55D8C3614CbF6402b4a\",\r\n    \"0xB3D8d8cdd16B5026fbC5cD6A6770Fba607a8D02A\",\r\n    \"0x8445BDd254d38B16E27247142Ec02689945A74A0\",\r\n    \"0x20BA1e659169E827b6d5AdB1462626F8D5f9A388\",\r\n    \"0x88Dd371C119CC8D10c48B2f4843a4D782c3200e1\",\r\n    \"0xbbfB792fB33529A7707540B837eeDC3BE7A177de\",\r\n    \"0x10448eFf4A40a9718cA53707A65334Fb62B1F299\",\r\n    \"0x9FEdebEb4Eeb40Ce434e523f99132cc5A0ADf849\",\r\n    \"0x339540F676Fc2b5026d9F20ef9Cc526b966Dbe2d\",\r\n    \"0x58867fa928b92ca3dc1c709d058ea1bfa1fc28d5\",\r\n    \"0xf489e2eebe635a91564a1b05d66571b631907f0e\",\r\n    \"0xb6164AF04291D3AA4051Ee78943618318E3F5cef\",\r\n    \"0xa950319939098C67176FFEbE9F989aEF11a82DF4\",\r\n    \"0xad4d70479cf926122ee41eca5db4e2775554dea0\",\r\n    \"0x54aC833500A1649b9fd9783DA3EF24B1D9E8FFa6\",\r\n    \"0xC7E4140d32410A4eF37c4a182480fc1C9a118592\",\r\n    \"0xD47bC7Ba103d66AFf66a511aeA87cf8F8B80FCd1\",\r\n    \"0xD7EC930BD8b6EA520dD1Cc2e98266ed6597d2232\",\r\n    \"0xfc2693f48079a131f4d444bef7b68d6ebcafb8ee\",\r\n    \"0xB42dd9bDfE81145a7eC91bfB674f4AaD5425025d\",\r\n    \"0x13FF6444e37b77A13B9634C83B1319FbbdFe8109\",\r\n    \"0xebd9bee7e9dd4ffc5711d7a0b44955869624d898\",\r\n    \"0x925846D8BDbbD54D44Fe1BD31c934cE3e4AF877f\",\r\n    \"0x2BCEc838362840eF392fF3E1fADe446773B228E7\",\r\n    \"0x57E72883edc2265073e3F71fDC8397ceefA4e314\",\r\n    \"0xb901376E5A8D003beEc4aEE109251412342d65c6\",\r\n    \"0xd07f8152ce7e6e6dc3a91b2b95015901fd18bc25\",\r\n    \"0xDA5EEc9447d77Be5dbF6bE94d2E85a5f65ccB958\",\r\n    \"0xec9AbC57357b5F1475B4A115BD0f8C2cC9b34317\",\r\n    \"0x19374E263170bd678B189ab8313840ecAC064eD8\",\r\n    \"0x5c97d12CD6D06c291AfAABBE99402Ad2340456F0\",\r\n    \"0x1D104aD019Abc432b8D38c15257999FE12705eb5\",\r\n    \"0xcC0d8f409B149b92c089B5a9177331338671501c\",\r\n    \"0x6572F3D512e331542bE30c54c2b55f1Dd73eEBf1\",\r\n    \"0xc82c9993Fd746B41DBdDae54e2D30Cfaca9b3D46\",\r\n    \"0x2520608F87D009fde5ca801EfEBeF52B891459B0\",\r\n    \"0x57BAB9265E6d83C5DA87e2A59a271d1aBAC629D6\",\r\n    \"0x7b400d4Be070B306B8f2649099173AD884823dad\",\r\n    \"0x21f434F9eF4403C628e37f202464d63A15Aa7ff2\",\r\n    \"0xCfbB7DD78Bb971dedce8a9D6aa7D31f2da63312E\",\r\n    \"0x2CD064Bc999c84a2Efc950FbaA8F70015E960fBd\",\r\n    \"0x5F91dDDF5822a7ed3950f85b3259511161B4E970\",\r\n    \"0xc65Aa07A7134B08a558cBc29ABa93CEBdfB02a33\",\r\n    \"0xf94D6906Add4d9cB3805F7C0377A1188Ec391F4F\",\r\n    \"0x33398Df1E4B1c0C4132D962DcdCf61d7839d6a71\",\r\n    \"0xC69751dCdc504fF6447BeF3b76ad2fb79719E216\",\r\n    \"0x71887f32f277411fCC7641bC537195d4C8522dF9\",\r\n    \"0xcA0D917d204f4F0bDd78262C8440F260c6478947\",\r\n    \"0x4F1203bBD9DD0716ae17535B6DFC15056b48dB3b\",\r\n    \"0x15CCA4e7c93f0325F2E85E9505a36a8ab26D31a7\",\r\n    \"0x8A80eDa4c6d6022874A0284822d8567C2E6D457D\",\r\n    \"0xc2eD4b0863f7Cc24887E87c7b82B994D93283Cb5\",\r\n    \"0x9e97BEF0A1B29ae991846c3DE9a1Ad5b1a5d7c0D\",\r\n    \"0xeE2864cE58Ca4fD92Bf25b0bFa4DD216d34c0aCC\",\r\n    \"0x8b20625537225F2e7f3df9A1183F57FC12596c00\",\r\n    \"0x2F75097445B5a41FAE715D289ea45904c53199f0\",\r\n    \"0xf5A1Cf1A7656fd1C2a40c539C6a355050489C620\",\r\n    \"0x4DEFc44cDfd3EeE7fAe1d5a3901E97B27cd01E3c\",\r\n    \"0x5b5FBD97f9A35b8AEBF1B2AbA9F1eBaa26eB9585\",\r\n    \"0xe51D8aE6daB8147eA5C11B56744d926Fb4A1b97C\",\r\n    \"0x8c197dB132A18Cf2c0b46A1051D7c3E43F65a17b\",\r\n    \"0x0EBBFC8d21809FdA013520670B51BA7dfD440FB7\",\r\n    \"0x63CA0543b2937A5DAA8594BF596B076f2f1Ee7AC\",\r\n    \"0x43c328A222C487f3a0C4DB6bA90eaEC59cFD579F\",\r\n    \"0xbf3b3Bdb8D8C58854A9125Ed30e635dD9887c3bE\",\r\n    \"0x0D8eA512830639A297d3c7d353386982C47F74AA\",\r\n    \"0x8D5B11d815A6f35054b1B73e283FEA61b60737Be\",\r\n    \"0x2a1D69a0830f6094ec318d93A8779dB877871736\",\r\n    \"0xf654352A43E6703bEd154F910BF912626784AF48\",\r\n    \"0x5d46bb6eAd61001DF664E95729795F38FDdAC59b\",\r\n    \"0xEffc21F04BF6D830c409d7656E1ED4f07a65EAbF\",\r\n    \"0xC7C3971EcaabA1E21239466AC0F8CBAC24826706\",\r\n    \"0x6A90c68Ea41E85C17f6B8d5f511E788C77018e91\",\r\n    \"0xB16a65c8fDab16D0389aC98eC58f1224867B847f\",\r\n    \"0xd9390b46a1749DEe5325A490490491db9a826D1F\",\r\n    \"0xC35855eD80e711B94eD0b0EA773CB9eB5a48f3a8\",\r\n    \"0xcCc23700efE72427E1040F9ab4F2fD2e11e1686b\",\r\n    \"0xA367C86b38096a14a95D7732baEC21E501Ef35BF\",\r\n    \"0xD0478D22edA367a87ea21EBe2Eb43fe18Fb55603\",\r\n    \"0x7C0E3223A7511e52147518229B12945EAD668E04\",\r\n    \"0x1E8c40e30Bdd842296689ef4Ee5D3B636e49B933\",\r\n    \"0x193852db3e87b738a39969f3fba81d2fcf07c325\",\r\n    \"0x7BcE41562e4c4059D5E40c857ae18786f440b6a8\",\r\n    \"0x1d0af70d1b7B0364B76c0DF53ca9125d9241B810\",\r\n    \"0xC8788e47632167d8642E7D14d9Ec056127a3A066\",\r\n    \"0xC5ce6FEa2D97622C00cE3FBF89AD4E90CA50Cbed\",\r\n    \"0xba287035f7F7eFBf81868aAbB528bfa0dA760607\",\r\n    \"0x601Fc9Ec98e0d2D725521D377194e743E8C6B820\",\r\n    \"0xa8FcD040D4B2dE1b211a5BE8de0B24252caE7eef\",\r\n    \"0xeAbed8538923d8B8E0616938F8Dc657F3CDF74c6\",\r\n    \"0x6A727064ac4CBd1F3F1286A2e2161A867C34988e\",\r\n    \"0x331C5db26401cc329e007E57d4b4FC34AC3568F9\",\r\n    \"0xE9D412869c361c99797083505A298fcC0c6fE4cb\",\r\n    \"0x6a5830b2a911c0f2e77e99789084e4b737b87536\",\r\n    \"0x8525D62F0d468FC8f52ED1Be4A696d80FD41B6C7\",\r\n    \"0xC02d7e0cd2Da887ebC2c43542d8E8f063615C00E\",\r\n    \"0x7A7f4487642CB6Ba2D09A7f6902EB2feFA2ED5a4\",\r\n    \"0x156f3116488ed4681C748C3eeEca4913FAfe4b82\",\r\n    \"0x2317f70EB18e27ab2b9456553ad9604655f00E5B\",\r\n    \"0xF3d7F04bE645AdBdDE46b54F3f760cdF8F7416A5\",\r\n    \"0x9C4da33a288C581fAC72ACD8FaEf45f4D8cc8256\",\r\n    \"0x2234F2115ea27abE6276f56145f699ea5EA7d1F8\",\r\n    \"0x0F0cB548a8332DBbBCdA615A4c0e9a12310FE42b\",\r\n    \"0xD3a024D9602Eb671E1Bf61A1AF33dF7908836736\",\r\n    \"0x8d701bD0504A13aa89BdBD30ad45688d11AdEaCa\",\r\n    \"0xd0cb82946fF53C247F1029cC47155A4Fd14d6492\",\r\n    \"0xE6C486eb5f5cC2C64b53AB6c3942986D648C9b89\",\r\n    \"0xF9df5142559732B35891c1d29Ecb17E6f775190e\",\r\n    \"0x5111babbDC79cc6FAd67CAc01581EfD1BCE92011\",\r\n    \"0xbb771C5A3DcB9633A3bbfb850A66c51a7aD88442\",\r\n    \"0x51d7A1c80bA54a7F25a2a1B35Ef67A440661bafb\",\r\n    \"0x4469d55666fb93d3D7D4a5EcB128001bef39dD75\",\r\n    \"0x7F69684c4F34F41e89dB8C7450bA92FF4Cd5E3bE\",\r\n    \"0x90223301b5451C8280c1578bF8BD48c2780D9a76\",\r\n    \"0x26C351893af2885113383143FDC03eBD98eB1ff3\",\r\n    \"0x641Dd730c80d6559ae15cEd5fEd08Ab2826A6e6A\",\r\n    \"0x3E1CECDc3d15Cb03e91a60470C4453f4fBFc75F9\",\r\n    \"0x6a1396D688391cbE750d39Ef7D8D4d6dBb4D65E6\",\r\n    \"0x16B55c516b8309b13815e190C4a88350703EbEDE\",\r\n    \"0x839469C31b854B6E6A0c1e67e6183eBBdaB46456\",\r\n    \"0xA25606dA9CF1Ff827ac4c6289891CfFbb9F03720\",\r\n    \"0x9dd0313c43c55b8bF172d7c3012e996A398B1B60\",\r\n    \"0x4eB166aA490547E12dD3a9EDed8D2b5E8E5De0B5\",\r\n    \"0x785e5a9D22900b9c8b92BB7045c0c279cc7a7b61\",\r\n    \"0xAB0922C53E751aBfc39121a54e9352F56F8Bb5C1\",\r\n    \"0x03fba2e6f1c1dd10eB4e49e93C57Ed84A527f532\",\r\n    \"0xdE9CCDaE96D10e7a581501bb169Cfbd2816D4104\",\r\n    \"0x81EB4be0A4d6F6b04479CA34950A1E3AA2842400\",\r\n    \"0x223A91b67a58bF70C0AD820b710f73BD2C19998d\",\r\n    \"0xd73EF851F223ee7996007e4Ee184481EdA0bf5D6\",\r\n    \"0x7D7B005d6Bd1F15dfE38eac7822247a6DBE25b16\",\r\n    \"0x7aFDaD9C440441f8E7C679Ba325D0c41e6161E72\",\r\n    \"0x0FF0cC6dEd3fEF4224B2716531bA55df59d96A06\",\r\n    \"0xFDd7F387f979E56ee80e66f5EB1fA919E9FcaBdF\",\r\n    \"0x6948D7B5980E79fB949C862594A2477CA089974f\",\r\n    \"0x3643f3B8EbC10329577a25eA50142408f38DAeff\",\r\n    \"0x67344f9832506fb5A58D8B89428179eADB0614a8\",\r\n    \"0xF9Ad71C3715b12f3Fc70E8e9F3a105AC2438F3D0\",\r\n    \"0xd5f95ffADCAae1209fA148999D0733A3d80B5FF4\",\r\n    \"0x068959BbA6641FA13015e649Ad4aCBCe1f80Feaa\",\r\n    \"0xD229090B6A8c2BEE437bBa5241F768fBa62Cf29C\",\r\n    \"0xC26Bc9203171ebbc97154f1f8B4FD6C3B4D58f09\",\r\n    \"0x375A708C5ea0FE4a18e43598EE40Ef27542a08d2\",\r\n    \"0xBf692a5C58F40789bE47B532D6277143CfD4d0eF\",\r\n    \"0x299CDdBb83b0B4C71750c140583316415F8eeC6D\",\r\n    \"0x1163081D1F0cB15040A1041D679755d0A5D20F0C\",\r\n    \"0xf6a3C4217F6B5c7C67d53e5087EE21A978f44dF7\",\r\n    \"0x8BabeF9b30D5b2845F2A06051Ab43cB53A4107B0\",\r\n    \"0x92Bf7DC564a7869A18Fabb858ceC20A07901EDaB\",\r\n    \"0xe4E6733DDb6a0CA1649e5C108b95e86473A987a6\",\r\n    \"0xFc916b9E6ccd2498B0C1D61480bF8BB9A5611C78\",\r\n    \"0x582a0a57a3bA31C421768de61241062AA8aec8F2\",\r\n    \"0x84dC68ddc5E0cDb79f8DDf4534157eC3a10623c4\",\r\n    \"0xaeeb8456f598F7242Ed32bC9658BA20f6B4557fd\",\r\n    \"0xB6825fe2feE68e8C0d2781d0D963fbFCf6da0487\",\r\n    \"0x220Ba913609f1479e782d7DcC3cCF072aD755fdC\",\r\n    \"0x8eE60A0266DD74821d299390eB99cfE9612d901c\",\r\n    \"0x277C79c8a4AC00F8bdE6Af6Ba06aC0F2071eCe90\",\r\n    \"0xb77D9a68Bc69871D3c4188FAbfDC8c577114E263\",\r\n    \"0x7dd2456796b68682b864288207d191A21771c350\",\r\n    \"0x72d2731A30B0bF4ABfBD2F98391C5157645B36a5\",\r\n    \"0xB5b11C00F003e9f52240cc792524c2b0c08e8D51\",\r\n    \"0xe47E1ac440A31A8C77C825cF30D9a91f6352Bc84\",\r\n    \"0x52b65aa74539971795B65638b1c3e695BC88BdFC\",\r\n    \"0xbC1FabD25B566143A2641B27944869b11D2B3728\",\r\n    \"0x01F41c105a9c06c02F6d20d511bb924DD7aeD737\",\r\n    \"0x146Ec2A7A21B323A534796fb1338736F9fC9d5DE\",\r\n    \"0x049232a962EC9F412e9295d6Aa746E568AFC7294\",\r\n    \"0x80f900994D69b9012CE551543d26ebb5A8ADd14C\",\r\n    \"0x361d4Da8936c19100cc7643FAefbad2632F7e321\",\r\n    \"0xd1b7Ba65398fFf9D581acf6aEB4CB80c216EF95A\",\r\n    \"0x6CD01362ad97C772467A7BD91E8F415F7B80ecdD\",\r\n    \"0x0DDaAcf9a5f1E2A3E1Ff294D8bE5Ab29c8C4BE73\",\r\n    \"0x23046d9aa616a390aab7fabafc944a593141a66a\",\r\n    \"0x401661BDe626814530F660074e4A32d6d8D2a7B5\",\r\n    \"0x42b2dca9Ab985A20b23c2ee9c040520f9385F136\",\r\n    \"0x8004f454e1E8C3969e95eAaf007Fd391edcCB212\",\r\n    \"0xb0219849acA3e6BB97cbD3bF5Bddce9C32E16DF3\",\r\n    \"0x07cd24C35403E88B647778ccA17B91D2ee02aFF3\",\r\n    \"0x341b9a294061CF413D27d2236aE7D85d1D691Bc9\",\r\n    \"0xCEeF68F2D032Ba0003eE1DF0E805Bd43eD3b5a1F\",\r\n    \"0xDfB5E2D84a8a52c5F5192c2552E41Dca6Df5407b\",\r\n    \"0x0E88CBaEeAe8D34CF6b1f160E27EC01bcBC3c8cd\",\r\n    \"0x9271307799Ee65E4b4544fD76Ec18035834eBEf0\",\r\n    \"0xc875ec84448BB026AAb70Ce52d28B3091Eb65e82\",\r\n    \"0xc33255d608a94713d5e5A53AA4843931a2d2Ee79\",\r\n    \"0xC355bb2414889837c85C314e6FF5a4b6fDc7554a\",\r\n    \"0xa9c7Bc9517154562Dd2C2CB0899fb533bADCd03b\",\r\n    \"0x88B05C27E66E8DF10AC259008e820f705Ec0Ae34\",\r\n    \"0x3D64246884e06C8C7E1cd20641156cB528A700Ff\",\r\n    \"0x180c06dE66E2d5bC1bC13ad17634B992F76eA90C\",\r\n    \"0x3014649f133CA27F3Baa1e2a860D2307b7dEd51f\",\r\n    \"0x0A5986Cb3980EE12c2D75C4eD8e2abE33bB33c85\",\r\n    \"0x15EAd2b10E2776e051dE71072023fF85918a30B5\",\r\n    \"0x74fA853558b7F4bfC095e5D5b6C537F3EbF4Fca4\",\r\n    \"0xa7126F204c3Dc45eF9F920C72E70C9e5474E6434\",\r\n    \"0xb1237f83971B520c9502e9Fa59C3a6b642Cb04dB\",\r\n    \"0x1f487bfe9367bbe6880bfdf469346d030bf3439f\",\r\n    \"0xb5E5291A1bA4cd85C67e9489cD3A22ddD652d86c\",\r\n    \"0xe6d3c3550bcd8a6d9e53b482275a84fa62c3a5a8\",\r\n    \"0x9281f4d044a1C67E7647148ed5aCE6D63221315A\",\r\n    \"0x46DE1f4aCE0d9D45c026E6Fd2f70c51e6b74Ad03\",\r\n    \"0xd2eC6Fb85782e5c5982743F66D293617803A2e0c\",\r\n    \"0xb193bA2A0eeF6acFff18391c550F0cFFcf36dc27\",\r\n    \"0x42965c4e1eBFc3744a8E3ebC2f3c8E4A655B48C2\",\r\n    \"0xDD89b924ba6A7D5029B1A3A76F363d1A571E4836\",\r\n    \"0xbfE440c533F6861c00e71CE187f37a1A70b7b7e9\",\r\n    \"0x1Ce1a58Cd5705F386e07cC9d49B8812C5ee40b3f\",\r\n    \"0x64C2838ae4EA458729FBF317C7BF5C47CD52B887\",\r\n    \"0x36C4A94b352eB389B39D098608737193b26ab051\",\r\n    \"0x7361265D31d5B6bBfC2FABe5aE2E2865f1B33245\",\r\n    \"0x94866073C117EE824D9FC80A148011a32dF193bf\",\r\n    \"0x51A51e85473717EFd193F485A835ed766Fdf64Eb\",\r\n    \"0xd4F7D097D7Bcf3b23e7E3419e41110523B4d89a2\",\r\n    \"0xf6a6921ca0435B9AbAD052f53D8c27856dE033f4\",\r\n    \"0x8Bb394248Def97dCDE83d4c1d5A91C3620fE3063\",\r\n    \"0xf492B28cF8d43B42cA0bee2205F53bA1001c3237\",\r\n    \"0x6Da432F786CC7ed871b5571BFc192e8E4B37c7bb\",\r\n    \"0xd0E8afEe39313Cf854773894FADaa78b4641f923\",\r\n    \"0x5F517A9f9f4984aEC6c0F73328D835637c2FADb1\",\r\n    \"0x4ee0A98041069b745855EEf05cfa0046DfCBBd4D\",\r\n    \"0xc2bb9899F1F7DC7913cd6b748D39300047717176\",\r\n    \"0x9A55cCf605ff9D08C255D766b2DfBeaD74840053\",\r\n    \"0x6853285716a92aF6DD07F2F6aeBCA23E5b13f8f6\",\r\n    \"0x8bffc7415B1F8ceA3BF9e1f36EBb2FF15d175CF5\",\r\n    \"0x8346257d551eE29d43D990E15BA40ec1904c64B3\",\r\n    \"0xe4087933f7344B3b801301C6BCd51612724Ca5dE\",\r\n    \"0x8b01553BcE7f63864058Dc632A25F2b0F56810c2\",\r\n    \"0x14e63Ebf08494c7b2f9934Ec9deC6154D529d033\",\r\n    \"0xEEC18239998A3C2923e8ed5758c46Bf8bEa23417\",\r\n    \"0xBF916345eaB3f0B1063e64195a2f7Aa022fa8B9c\",\r\n    \"0x8e03fB93C53d42e50f772bfebc3F9da5fdc6EB50\",\r\n    \"0xf6934d7F21E914436847703716C34de0A4De326C\",\r\n    \"0x734f8eC403E761a59DD16052072Ac7Ee11F7Dd35\",\r\n    \"0xeed289A3098B7fbecD2Bb377C4b322955Af49784\",\r\n    \"0x3d0009b9A9EBdED24d1D57256C9c5D5d4171958f\",\r\n    \"0x6A4aB14ac091fB7bFE777b98B4EB921d9Df9630E\",\r\n    \"0xbdA279Be4620249b3cc74C27946730c7F76B9302\",\r\n    \"0x2dfb6A5E378A8B6558C5F03B032f1489fA3674a8\",\r\n    \"0x182FDb27d6aae88388ad38A2d7f0d1aC87a981dD\",\r\n    \"0x97dc8d0df5706CE4F401a01f7ACBF8b189F40e62\",\r\n    \"0xd6abc520878622276D9925580C5fa7780A233F2C\",\r\n    \"0x2d3dbCB2929AFe8e9aA700EF41D14fff85bb91f5\",\r\n    \"0xeF5e1aEcab7Ad237eF7f41B07Db5760E6b2026A0\",\r\n    \"0x30326d3B9Ae3A19Eb54Dd5332E4A367E74cf64C4\",\r\n    \"0xE6bc40A1B7751722089bDd7c8b5BD544d6F43fe1\",\r\n    \"0xcc47F370D7b0892E5be50e3642d7815aBb13c449\",\r\n    \"0x26D7B4fe67f4601643304b5023b3CAF3A72E8504\",\r\n    \"0xfBaBfd8f520E38d6e2178D018209453E86246274\",\r\n    \"0x192BE6f0556Fb8653184e25385D92AF053701126\",\r\n    \"0x6f0ec51a64ed261f3a0f7a6c3ea9dc7934462144\",\r\n    \"0x205C47553b9f894AF9A77C201Db3ce4eccec3C3b\",\r\n    \"0x68054004024e88d1de42dc8aa5BcEa9aFadDdE61\",\r\n    \"0xbE659a818Eb788490be750d799682CfFD66be518\",\r\n    \"0xaf0b33E976Fc2d980dCfDC79d481560A5bA3EA76\",\r\n    \"0x96e5b2B39C545D092395d231E4A457EC72C6e174\",\r\n    \"0x4485B7cE73115582e4D37F772d5C08726Af83814\",\r\n    \"0x8661BaA58aCc24a9720014D22fAB43111C5BeB82\",\r\n    \"0x9302D5729Fd378905A31D48F1D1C9284b82Ba8E2\",\r\n    \"0xb99eae4B1FB07880896Ab975534869bcdDeA35e0\",\r\n    \"0xaAB2ca8330CF0903bB166fd44fea99bDf607436a\",\r\n    \"0xe83FD7F268688188b469d116574f889c13EB194d\",\r\n    \"0x489d20b135c7e7325f22dE88FEaB1b4B0BD61A8F\",\r\n    \"0xE7F4fB77920dc6ce633bd90544cfC3C4288135B9\",\r\n    \"0x1942db9a1B94C7EEd33dEE8bB72C570521FA3088\",\r\n    \"0xE83662f74a5961436490cc88417a107CF06a175a\",\r\n    \"0x521136A331357a646D3807b80Cd53B9580a9FE72\",\r\n    \"0x5896D4D9C12967c6A9C19d470B0e6C246892d732\",\r\n    \"0x6025DeB27359b5CcDf6Bd402418995eD5bA882D0\",\r\n    \"0x53B45B0E7955158172b76ef3B727Dc3F8c234648\",\r\n    \"0x3BEe8e7918B642e86c3921094f9b92B4d74Ea776\",\r\n    \"0xcfBc87e541cdC01Ed798b8DaeAE4f84665f61fc7\",\r\n    \"0x3F5C2bd73121F39782342f8F1aBD430cDaAe9624\",\r\n    \"0xd7963c15A9C987b4885569EE7dE027E9A366604D\",\r\n    \"0x7c351aD933f713574363aBc78beFa9E48b56FB18\",\r\n    \"0xc01aeD41891CDB94c4762C3a9BDee6e5a565D964\",\r\n    \"0xe379FA811FF6b6Bc5aE767264BCfFC1758b3d94A\",\r\n    \"0x8008A26d56cc221199A4E708cFc33e2a700d4fD7\",\r\n    \"0x1DeF992141B8Dba5afB0C63EcA9164C71a9312f9\",\r\n    \"0xeaf7814cdf7236bc5992d19cc455f9c92b00aa9e\",\r\n    \"0x98f4B5BFD059B1ea8c42A6f966380788dbfc6e9A\",\r\n    \"0x01d8978564fDe99FC4609892ac7b605f85600803\",\r\n    \"0x0813E1B0a5B1D0D67cEAc68696591f5aECc613c7\",\r\n    \"0x4B2C002C1c269354b4163905F2a378d711b1b2a7\",\r\n    \"0x78fE6CD89D8C51f9758553Fd88F435A0576d2208\",\r\n    \"0x849Ec139Ff4A91ADF59d2e8c1b620dF35775f3EB\",\r\n    \"0xe1E07Fc57034ba2c6ee6f77A4B27bb64bd764cCF\",\r\n    \"0x5b29091DFCc3F4F0630684818bA22b75c74bA375\",\r\n    \"0xD89B0a21aaC08d73341484AAE9a0A1024D96E1f5\",\r\n    \"0x818b5f863419dc77a859431FB99dB936B58F93B3\",\r\n    \"0x3D670681bd5594C3063302a757071A4D87fE439d\",\r\n    \"0x4B6562aeA460FC59FEB8C8Bb212408Fc1dBd84C1\",\r\n    \"0xdd67F71E07B6B555Dc854b3f89dbF4E4A4c4c159\",\r\n    \"0x16E6b427577248310dcA9d3d8e068110326803CC\",\r\n    \"0xa984f5555DB96843e0f37d7a9424414708293cD2\",\r\n    \"0x110A072119278b5aA5D1d47CeD5E6171ba5F41D8\",\r\n    \"0x2a49E8fA721113063B68f3e772585eac57c9067F\",\r\n    \"0xEA3aA528bF0597efC7E122657bdfA3848895eFeE\",\r\n    \"0x868282D449AA318611E3C160258C212321135eb5\",\r\n    \"0x6f9cFAccA63145c906fAE462433Aa1d1F147eec9\",\r\n    \"0x71866Ffb7E700E0832aD51f230B75668305493ff\",\r\n    \"0x12eD7D4b66f563772D2D76688ef69314e85b8720\",\r\n    \"0x119EC0AC12f80BFA98C3F211b60483Ebc2eb6A10\",\r\n    \"0xa3E40b15F30A4A3D73C1d8435EE25041b05D1daA\",\r\n    \"0xE7A70629E28583474Cc77b704b67A3c294E2993A\",\r\n    \"0x35a73a90897b4Fe3A998CE054A1d62578cDf7c89\",\r\n    \"0xD202478A89675538B4B5f7A234919b89963efB8D\",\r\n    \"0x71d3b1EcF9D1a0Dc0eEC0Caeb32111BB0Dab1B62\",\r\n    \"0x4D2F13CC1cF435Cfb0687db8551Ae82FED226d52\",\r\n    \"0xC03b48A0e72d16b49A7e1D016b2A00dCE4Fe968B\",\r\n    \"0xfcCD18ADfbEbddcBD0843c8D598135A3E59Be3dC\",\r\n    \"0x99C35DF231D850017b83A909d9f3c278d5d53A10\",\r\n    \"0x4d5d457421E44F09590d9005e7223c8FE0f1Fb20\",\r\n    \"0x53013dbCd1d99090Ec39A5c81262dC2D93D1dD02\",\r\n    \"0x4Af84f12FC41bf5aB4F0C61f584602c42b4BC330\",\r\n    \"0x1090562f3a57F7c56411D6f784DF65959Aa90375\",\r\n    \"0x4821280215DFfEef650Eaa03762c3D9adeb2AFA3\",\r\n    \"0x9553317216935E4b81605c523d62126Ad695925e\",\r\n    \"0xB08609FaC763e61Ce18e4055270aE69e97828Ef0\",\r\n    \"0x94D42CE30B20A9f8C3636fA8c61BD2880ADF2092\",\r\n    \"0x6C98702e96290DF3426F1535D694a866f385C375\",\r\n    \"0xed26fd0218b85f296cd56cd40c9955a36b52020e\",\r\n    \"0xB8FeC547F774429cBc5F491a917D28C8138f2c32\",\r\n    \"0x891720f7A628A92a90980769F03ac47484b987dd\",\r\n    \"0xa3eF08E3510cd24FEdc5202A8F71F4aC2B61b3f8\",\r\n    \"0xca8bCcBa81a5Ed0639406F50C40083479C99e62e\",\r\n    \"0x27a2b6a5D33A55CeF99D76da651Eadf36a910b5c\",\r\n    \"0x4C85c0Af962545c81c3195694A36f63A0B27c198\",\r\n    \"0x66A2C7B0d4Da7E699f6dD27f89b49AB15b0A51e8\",\r\n    \"0x330AA0a042347313B68Be4CB629323488CF19D20\",\r\n    \"0x38331E91bFEDe95DD91b37E9841724Ee06D42C7d\",\r\n    \"0x53FDa6d3ffABC8388B4c24e980F83FCDb1496e51\",\r\n    \"0x1B54adafAA517d6D2DA3AdD9060E66A65E6D7dB9\",\r\n    \"0x449833c57904F9d88cD3c26932060A329B93FE94\",\r\n    \"0x8ee26029D9C38D95Ea45BD923dc66a9d3EfDE0E6\",\r\n    \"0x5B233b30E76A14af05227dC9c2E355199936afC4\",\r\n    \"0xF8298fCFA36981DD5aE401fD1d880B16464C5860\",\r\n    \"0x327c4CDE7c1980D5327982cA2FCA195a20bB7825\",\r\n    \"0xE43e8669F069976F4A663564f5d71Da5c7BC4dBa\",\r\n    \"0x88350964c2d91a6Aaf5C7430a35f7AB27A7007D3\",\r\n    \"0x4b81F74eFA519aDfF23Bc5c84f56657b43Bc2d67\",\r\n    \"0x9c7CBC31b3cF99347818425BaBc843146FB02e69\",\r\n    \"0x4Ae43208A4429c1D115E4F36A45D51DEce635Aee\",\r\n    \"0xa5e2Bf2b2Dc46ae3C0dfCa217ED49AAfA4EE9D37\",\r\n    \"0x64E06783eE859a28690C34a9f089919B7EaD8Dad\",\r\n    \"0x77BDe821204a276F0EaB1C683cB3F171A96112f6\",\r\n    \"0xA3Ff0B944f782eAD4f306Caf10fCE0187baeB39E\",\r\n    \"0x29d109d06Bba4E6e2FC98a30e35702a63e53995A\",\r\n    \"0xE46183239440D30984b3b342cf027b74917dC983\",\r\n    \"0xda1bcAE6F39ab3CaB0AB795DFAB4B67dcC58d129\",\r\n    \"0x4cD012d8Aa7E275781060E08ABe164B036216C6a\",\r\n    \"0xBcfDdFB2D3F6184148e2755A8D6E358B792A0FE6\",\r\n    \"0x536188955c70cF4629f5F85035486B2210e4aDce\",\r\n    \"0xd9ea5B738C8733eE799992CF065EbF45A08156a4\",\r\n    \"0xfCBBfba408B2d87a3393112E652053E77A828AbF\",\r\n    \"0x20f672998eeD73C7daaf83CEa7E7905bEAFA7c73\",\r\n    \"0x4599EEd5465D2f37884088b10fcd340e913EF5db\",\r\n    \"0x2674D982A24775A10da837CD30bFc7ac2cCcDD62\",\r\n    \"0x31Ec3e54B6807e24F383CcD39cA9E04244824388\",\r\n    \"0xce43cE3250D3553C266eEd5bAaD9CA54b2eab99f\",\r\n    \"0xc692D77166576C75B62D093C176DcAf85a71E408\",\r\n    \"0xB8864d306a566A018056955EbF41A76a9088354E\",\r\n    \"0x9E07C7233CD13CceE260d77E8d27749fdD7DE456\",\r\n    \"0x2E51BB518708e849EE38f8c5b758B1d860d8F49f\",\r\n    \"0x5C81fec4e9117B6440A9f2ea4Ad3A6562740416B\",\r\n    \"0xDB557eE6FeA4116566a77434b2ca9A1f4Fa88e17\",\r\n    \"0x27db887da2d9369b5a19601cdc690c68918e9ff9\",\r\n    \"0xB8590baccFb63165e029db213878eDCadb86CEcb\",\r\n    \"0xAC1186397EB46f99f695F2c29696a491b1572034\",\r\n    \"0xc39B72174576C90B752bE84787B9E2Ab00A0b6a7\",\r\n    \"0x638f48888636166aC9c09871C5C9CD26Ee9db9bf\",\r\n    \"0xF3e8A11E0Bb543Ff708E8E9F74DD3A4CA19e325E\",\r\n    \"0xE41d11bd2b8D84Af57ab9333D33c4088b209f1E9\",\r\n    \"0x289eCBE561892cD6fe8F497B24eEfBc582DB3EE7\",\r\n    \"0x285Ae71770607C41B03374be238D5F936550471F\",\r\n    \"0xA2dBD13FaD56996f7216D4bF41aE90020a44B3b6\",\r\n    \"0xa1041Fad6D78Dbd1c1BF450DA269f575852952be\",\r\n    \"0x077387f3b01Fb20b939774c058034189F8A82B31\",\r\n    \"0xfa6ae5DF9d0e0ac901bF4b58BF8f833790160e4b\",\r\n    \"0x3447449ACE6691f9D1eB9EfDD2b1Eb847e045D41\",\r\n    \"0x664507fA5165Db13ef5e6500B27b5D06F9D107e0\",\r\n    \"0x18a4924c06605A908d49d57A95972E55630b0706\",\r\n    \"0xC29D0800FbcaFCbeb0aA75547C018AC1A33767AD\",\r\n    \"0x1DAB8CF09F3AC1682e12b35546f2b06A49F40121\",\r\n    \"0x16081de5eA9B83448c3450dAe962B2866Aaba925\",\r\n    \"0x3816b3ff24f90D7408935408326bEffb75e3a6aD\",\r\n    \"0x4420d3d07Dcc66F3e3657AaB52Af260c4A716F3b\",\r\n    \"0x8e0891a9ba57504fde1df391cec8b4b1e9a6e086\",\r\n    \"0xCB9B4c7952B6080F77dD8BF45716033160d9a31B\",\r\n    \"0xce9f7C88dA17422C1A64A91651b1ab286B0653de\",\r\n    \"0xDB93cd4Fd0c79fe78Fc9853b7777b99c4eEB6D63\",\r\n    \"0x5B5EFa8C2A005A7921A967db9BBD97670dcdC43c\",\r\n    \"0xf972C2CaaCcFEa0Cb69510432C35154936F6De41\",\r\n    \"0x94e8667D2d1F59dD719bc4581a994C32ce4b16c5\",\r\n    \"0x1d6C7E950D86367558152c2324e83aBFf512b846\",\r\n    \"0xefCC510a798E609e49B3C8Dfa8c76A2E3715ebee\",\r\n    \"0x1E82f03f3387fCbE9cd4e7c677953b0564AFAB7B\",\r\n    \"0xE6Fc7F4AEe4e213da4203d2D5e18210443c086Eb\",\r\n    \"0x491c9789bAF6c2FEc20649ABF741aF28959c5175\",\r\n    \"0xb23B7ed96219c89d17B3DEd8C1Dc4893851BF22E\",\r\n    \"0x2C62740D6f02f28eeeAE28033beDaB7C427e3A29\",\r\n    \"0xe30C220f429829937916D78B2F75a8F4187444fb\",\r\n    \"0x71c2FD077CA3b84E6942715885bad844907D73E9\",\r\n    \"0xff267073C24974b2Ae033E5459c7a5ef9b2550f7\",\r\n    \"0x57E443A44874e22C77D437008fd404B319d11F88\",\r\n    \"0x6391BAfA93119a00eA777d96B5691d712d3643d5\",\r\n    \"0xFE91A3B99B64c104D26AF55D96f5018f96C32D5A\",\r\n    \"0x848c5241af8f292ed8c0d7e5b5ff50849082db4d\",\r\n    \"0x1d33584acd677ee90dc0d365a4a4c4f09533f75b\",\r\n    \"0xC7FA66f00B2fC5b03f17808a42c5841a37209571\",\r\n    \"0x857E4A06c530A4Ad1fc8eFe836B4e537E999a410\",\r\n    \"0x8d9Bdcc33859c64f3dc0b37430C485072a175Fe6\",\r\n    \"0x8f2f9e3cd5c16abc5e75844e6fda11608a4a97d1\",\r\n    \"0xb3756Da873e52175FE350FdCE318549a63326a3d\",\r\n    \"0x1ed68A5c4EA277358660fD5F23bd8e797c61bfaF\",\r\n    \"0xa94A1CB8B6F3A7E4d47029De452F9E1083a86F86\",\r\n    \"0xDe8194FC7B6642b70B7E7C8D6e7A18de2A3ABbde\",\r\n    \"0xCfCa95F111428EFB25ba050A46499E1ff6336870\",\r\n    \"0x160797c677b67541Aa5344C9721E449726446762\",\r\n    \"0x472370a5D07Bb46320f75E1C215A56e3E9E9C1b9\",\r\n    \"0xD08F8EfecCcDbB2aaD84367Cf7EC07b51D97D76c\",\r\n    \"0x3A41fD86C92e52E3808b7A0d3D14ECd5B8F462a4\",\r\n    \"0x7354B835c24b7498A052a9Ca3e7aa6456930ef73\",\r\n    \"0xE63c78ADCB7a766DDC48e493De46094b59376Ef5\",\r\n    \"0x47628c22dAC7aff6Aa96C31a135370B55996b857\",\r\n    \"0xcFb022DC39C8683032f7F70eE77E578B68af762d\",\r\n    \"0x8F69bBDF8c61D2e80887a5B19D3B4Cd261b51A29\",\r\n    \"0xbB6A6602271e2B3FeF114e9ce4Ad6df055Cbf257\",\r\n    \"0xeDcDd23C6A0a3B16C0C2d3e92C65D5D3b153290F\",\r\n    \"0x33181B5E17644F5D5D06E92FaA7C7d30500cBF26\",\r\n    \"0x003c63EC6Dbe302504bfe1E0C0C771c89f46fe11\",\r\n    \"0xaCB851290170f10822205198EE8BD2Afc0461C2F\",\r\n    \"0xFF97A38A89f0A0293559228Ba6b9c87c606782BD\",\r\n    \"0x92a95dba73e3dfcdc538797bd56a61e9b25e7c74\",\r\n    \"0xA4f11892fD27dd6C4866c2ae966B349490bC98fb\",\r\n    \"0x5e3314E891F7eC5e3b13272038b1Ae45A950017a\",\r\n    \"0x3d904520cE37de2893Cc1B24D805c8b2BDAAc235\",\r\n    \"0x9763771312dfED5BD8F14c224626be2aF6c4102A\",\r\n    \"0x9adD6f8C7844F6F78C94308F21bFFF46fb4a5Dda\",\r\n    \"0xD7BAF97513623B837F632A57d6457FF5844f2bb8\",\r\n    \"0x0dA4e1b14487a15113894B9F04B83031f2795FdE\",\r\n    \"0x41AdD57db16fDCCEc18c73b1f8ecD77D40f8AD21\",\r\n    \"0x2F809b6F33cAbDD173B15f83ED6B331918A257c4\",\r\n    \"0x879ea389280e9C4239d9708e6E69e89da7F093c4\",\r\n    \"0xEda07E7F61B70c507792250D4FCaf08214713547\",\r\n    \"0x9E121698D68cf4C2B34202CCee11Ea62769a8BC7\",\r\n    \"0x65B1aB9e8068409c21f4a16928b22f3946f560DF\",\r\n    \"0x3B694AdB880946e760f2Cf457c369dc4c882dAF9\",\r\n    \"0x2Eb1cA224686A7844DC1129abbc47Cb2f1A939A1\",\r\n    \"0x12FEc96863f5A1B6fD3F10392Fce2D9fB54DB76b\",\r\n    \"0xd63fC5Ac96BFfFF69bB2CcD6b85983093802c249\",\r\n    \"0x2893e8995C59662b2b9FA579582AF3dC5A6C5884\",\r\n    \"0x8D5e26C092e003b78c1411ab85E30E4c893552E5\",\r\n    \"0x669049f840A6a33E3662257a3075E17229817780\",\r\n    \"0xFF9288714AB3855199e1C36Fd235237876ecFDAf\",\r\n    \"0xaD49Ea30E97C48AFaF1837963A9c2Bc63CbFa746\",\r\n    \"0xB0a3f51B0CBbDad4b2F5DcC21dF31525CebD9b82\",\r\n    \"0x306f5AC7275984cA12f9c07b7e41B3c815D01bEa\",\r\n    \"0x0040439B15C801641E7F334d2715Ec20ace27783\",\r\n    \"0xADEcEdE471FE86433338446F09Ed28fbEd759DF9\",\r\n    \"0x237B7d845B89763970C50B396D19c5a5686aa66b\",\r\n    \"0x30e2bf0652D2EF7E89A899e4319076b049100F7b\",\r\n    \"0x6371F793946831E5dD7cc51E16C46E985A7dbB0F\",\r\n    \"0x5a9AA63008310425a15964de63d0471541c44EfB\",\r\n    \"0x909ca99850275b8cB33078112B599176F7A046E6\",\r\n    \"0xa41Cee2896e39bFCA10ab50796ebD163893f7E42\",\r\n    \"0xF22773722D6cCc86aB5FA005dA5b92642dbbA725\",\r\n    \"0x46094b8dE2EA4bA801f5ddA9E9505CCd88Cb17c1\",\r\n    \"0xAE3c71cDd04f8e0956Df6ca4C235BfE658816c2B\",\r\n    \"0x0cA40CD5c9b3a0FDC62616579e35e9c0eC3d1443\",\r\n    \"0x647B7881b8A63FD8C6AAb5b0244b9067223d0e12\",\r\n    \"0xA39ACd2Ed32EfbB07D8FE96f5fdb1AD22793a4b5\",\r\n    \"0x04a3598bCF0BF7F598ABe0e05010922e4a55BF8a\",\r\n    \"0x45a541BF3Ca6dd99Fd95331459252639743cbEFb\",\r\n    \"0xaa27aa77f5fe3917df30E93b7D07E76CaDEB5eB9\",\r\n    \"0x76Ff5b02e7E36957033d0334690E0A3259918fF3\",\r\n    \"0x89Aa9E255BF7f59c28A3A16D5fd6809687a61cf7\",\r\n    \"0x51Ee2B96666A2cB904c30129db91Ddf1a8806086\",\r\n    \"0x62b818BdCf568026bf72cA221F1c1e55897D2DbA\",\r\n    \"0xE3A8a23599a359A4dD927766ea52f5de09362bfD\",\r\n    \"0x37A91aA2488da777f5476cC219b1BA498AF7f846\",\r\n    \"0xd67a7BB5e723faC9A302cB2E22616Cd8fDE2B716\",\r\n    \"0x287A54F4f2797D58De4CfEd0460cbbF4285A1D6f\",\r\n    \"0xcc7D30F43bAcB0B52970463C73303B6aB7370e34\",\r\n    \"0x7a3aFa17C889D05e7335C169d503eBA5F15195ec\",\r\n    \"0x0525716E97f82FE7d3Fcf4Df36a776B570594Dd8\",\r\n    \"0xd11772c069c7fd75dd1036021e659f99251f33fd\",\r\n    \"0x15da08fE508ACdB34bf0FE5b7992Be312f6B53Bd\",\r\n    \"0x0c04aD21e7e042D627623114Dd732DB3E960a270\",\r\n    \"0x3C59bF35a7Cc8AE5B1945C5CE29e6fA48435c678\",\r\n    \"0x7e5e7c6c0175079399f5720b822b22a57519a17f\",\r\n    \"0x86e70A20Db42B2401611C829A06c59ca123bD672\",\r\n    \"0xe91863dBfC8134EAB698BBF92Fea6b86C266ADd1\",\r\n    \"0xA00813232C105e81d23000f0274E6D0E13eC6111\",\r\n    \"0x54D7D398fF8e2b6e2DC0f689633C316714Be213A\",\r\n    \"0x612924d8649B27766390Dd548F8590880f2D6e7c\",\r\n    \"0xD421775a7bAe6A0841718484B6Fe8Ef1b1906394\",\r\n    \"0xa7786cfa7b5e53599e666d33a9d5e1d05b2688c3\",\r\n    \"0x692EcEe737F1f559Aecd88cd43be09b77610B0dC\",\r\n    \"0x7Fa19382563Dd02164AB3B9855fABEd4E4FD6294\",\r\n    \"0x7F6488733d92e2CA20B677a68193555F910144e6\",\r\n    \"0xf52B6A3CcA0f68Ceee778547F6C4A43D423defed\",\r\n    \"0x1b1fBfDCd2f66C732Af9aB24060d7B37eF252E07\",\r\n    \"0x037f63874C914720de73cf339371dA683C69F181\",\r\n    \"0x1FA894CF08064Fbe00F621847e0040F57916f52F\",\r\n    \"0xD4D99d6De023DAD1dCB2C57E1d4b0B73957eD4a7\",\r\n    \"0xe5c7262fCb80BCb7703387b168361dfF89C1fB9e\",\r\n    \"0xa4dD63CcA3421b872166A98Cf57D12307943c42b\",\r\n    \"0x73B4F385B9e4E66682924e6176E912ffA9Dc28E5\",\r\n    \"0x2b94C14422a0e84EE75dE2F255d1478703d15797\",\r\n    \"0xa2275DE35feaE9e52AbD9c9b78651A5CBf0D79F1\",\r\n    \"0x625b2126acFc59e624f565f7918B3EF0379a3ded\",\r\n    \"0xdB953EA0fa6b3B82b00cb2D107217C893B608920\",\r\n    \"0x1412E4C6A74A1e5ded82e57601b75bEa73E41b00\",\r\n    \"0xfe36d21C570609D4a09a4DB3825c4911FA6b5c5d\",\r\n    \"0xc75878E930b2ee129C6B7b91EAda7db31eE44172\",\r\n    \"0x66f778268e13FaD773924d94b6dFF44fF50163aB\",\r\n    \"0x4Cd3F1C8Bfe7fB50470e4738e45921A1D08bc9bA\",\r\n    \"0x0c3A9A2DAFfaE7f43B5B4A0c277186520c8026D7\",\r\n    \"0x75472F64888bA88D3Ca649a66C089963D6af513b\",\r\n    \"0x278E2490514E9812459B1c479740B7964c319417\",\r\n    \"0x09DDAdc4dc6cEB0e18eb5ccB8C9104a87B33C37A\",\r\n    \"0xbeA1781cfeCb56DF9add05E92718F0552a652317\",\r\n    \"0xAD4e1879297249d43Abd7A831D03d6D7Eb471B2F\",\r\n    \"0x2F9CFd8BE1aCa3E5B0B802aFC3B07bB1aAfBFa41\",\r\n    \"0xA211CF52cfA9b32619E1E5Ef9E272527531b3810\",\r\n    \"0x77f2Aa30CC936C49C33F69f14b403948f47E5927\",\r\n    \"0x31ed467D13d9a2De35641e533C20F4Fd7b5256C1\",\r\n    \"0x9e455ad1912eC214e66cc7D4d62D231cb8c6540E\",\r\n    \"0xDb0c4D85C76B8d2e3F755E2e292d80f327777Ac6\",\r\n    \"0x134E7eEb26aF8D550407C6c32f28cA01017BdDBd\",\r\n    \"0x2f4C6B47A4CdA6299FBA9B8FfA5901Ee6588B9E9\",\r\n    \"0x494355baE06BbD80fA7F8Da868F369FD214f316E\",\r\n    \"0x20BdB5c12b01d814660a1337765a9299C38E2C74\",\r\n    \"0x7d20F61A1EECa27D56ABCaeBe59c5ddB0559c0b6\",\r\n    \"0x313Ad4f9B0062232735C7849fa24639B9C1023e4\",\r\n    \"0x90702c947257f53Ac97fD996587913018dcbA8d8\",\r\n    \"0xE92761578ec279026D8D0D64A3d4dD5a61EA4251\",\r\n    \"0xfc2286eF416Fc6D0Ba4fFfba0f7c13B486828b1f\",\r\n    \"0x31c9b47b2CE4e2fdde1E24299966e713c17a67AF\",\r\n    \"0xc77639F1a3220376121e3eA521a1041085079c9C\",\r\n    \"0xFa1e12045eb830ABaf28F9F367CdFa0017f3DB36\",\r\n    \"0xe253ac5FD2a9652812295FA2cC2b246C84731A1C\",\r\n    \"0xac57Cb94208E66Dc4942F8816975323BBD9da8e2\",\r\n    \"0x3985A5Af3405910c2b4bBcD1Ca5634cCa44BA39B\",\r\n    \"0x8cD712cA96329A45E3434020BA59Ed783A0a6e3a\",\r\n    \"0x21Cc99ef3e6fc1765a071CBc4D99FBa8733Be472\",\r\n    \"0x7388E29da2a3Cec20306d0DA1F561e6006a7FF3E\",\r\n    \"0x6053EcB2810a97bC9100B576a618b6FdA4259714\",\r\n    \"0x4915e385585F7bfbE47832940162F9BE44E1be6C\",\r\n    \"0x1c6393967a332d2e6435Bb0edE640F4EEC2390b1\",\r\n    \"0xf9e86BafF93FF28c9Df6B633bFf9529808c64585\",\r\n    \"0x122f6A5AB8b17ECF7d237dBdEDeF54aE384b858F\",\r\n    \"0x55483b35F2a9c32aF91A9Ce11e6570ed4A8cd5F7\",\r\n    \"0x4BdB3562156Ea36e0F0789c00DD6372C1C4AFD47\",\r\n    \"0xFF7A47d9a11E4B1dFc1F7BBcD31d07A4D22e8dfF\",\r\n    \"0x98Ec10Ad6d59Ad1BAD41f976358B7B5e82E400A1\",\r\n    \"0xD874f397202b032e2611cf999ff737Da419233E9\",\r\n    \"0x62fd34d0e6e239a4023575b73818ba7cd7b8888a\",\r\n    \"0x4c4F81b73bdEE0559bFaf093bf6deE1bF8493fC1\",\r\n    \"0x1Bf2fa5e3c548A44E62653466550c351c361Faca\",\r\n    \"0x5027310c3620116587ab84278C8A5c34911e90C3\",\r\n    \"0xc181f3828fE39bbE39e78354795a676304a825A3\",\r\n    \"0xB6D19aFe6de6C1Ab49B964E202ebBf6b8E590a33\",\r\n    \"0x15b00ab3cd75b09e016e3473f6b69653ba78df19\",\r\n    \"0x0637abEE45a29b9D72B65e3B18142764789E94FE\",\r\n    \"0x5833DAC718f10bf8536584A1e3a8f82Cd39d0031\",\r\n    \"0x0a5aA9e92F1A0552C7d812c06d5F775bDF516f85\",\r\n    \"0xeCa5D0b717FbC513802Bc809b2F4192EEC1821c6\",\r\n    \"0xEB1127E6C774b9C9760f311C5d54a72Fc0b84B74\",\r\n    \"0xA583b8E38eB29F279e0937772591B936F595531d\",\r\n    \"0xBE719108a70492138F403D51047e43cea8383b58\",\r\n    \"0x78a0fECf6404d4eD3D735bCD39552c754144D8C7\",\r\n    \"0x39919d87F1ABB80BC441aBb5F832335199b9aD79\",\r\n    \"0xd7582E2091541FD8017A8B9eb07C3f8cFC328Bc4\",\r\n    \"0x988c1C81B477908b8D80F735c68eD276391741D3\",\r\n    \"0xA10376DA2D0fcD102AcA5ABeD7cE6da8E1D7E29c\",\r\n    \"0x9a1837b671e018ACCDfb4d5eecAfd00182477266\",\r\n    \"0xa4F2F1c138B32AD5219b601B3753629B6e4B24dB\",\r\n    \"0x74AFdE56A4a372A74D3d057bDA0070d7BAA936F0\",\r\n    \"0xA62e52b4ba697b9536A041D38d5ae6e8321d256F\",\r\n    \"0xb5E29DF00b97B50DbD4b54b3E7F8c9AF64ab7AA4\",\r\n    \"0x835b9eDf89e7472AaD4a2FC4fDE8a4E6f05Ae9f0\",\r\n    \"0xf9184bcD2c5B8168034962809aD2Cb1e4fb5ce37\",\r\n    \"0x3DeC3c07d209914f3CC13c7492Ac12E559C9DD7F\",\r\n    \"0x90347dc6bbc5236Fa40480D75D43150781CE444d\",\r\n    \"0xc360FFeA2536c9207f6f52011c459695Ee5c5Da5\",\r\n    \"0xe43b1bb608c2Ba7cAAb3C8FB8503E66b5bd1b3ac\",\r\n    \"0xA0cc04B4356B7b8db816030E8bf1977bBd75ECFD\",\r\n    \"0x712aC12605359de417daE601bFaF939D95f21358\",\r\n    \"0x4d020733EBfc5fB8cf950F77E05Acc8AB24e8C3D\",\r\n    \"0x8894e658BffdA7BF2aA09F8fDf60c85fF987DD8e\",\r\n    \"0xd5b8AFd24B615C63b175Ca8AC45AeB1690523026\",\r\n    \"0xd1BcF0fb3C9e8fd7066659f440a0493EFc19cE44\",\r\n    \"0x65000F89633098C49aC4e19De00AF08F52dA62b3\",\r\n    \"0xb92aA14b5118BF3E67a48CFe3e7132375A9cF088\",\r\n    \"0xA3E422eC4A6170B69753f6FBA050d1CD65bd5704\",\r\n    \"0x2FEEB37D0Ac8F777E52660e84a78BC84F74a4E02\",\r\n    \"0xCb6617e3A0Daa049Adb179162cEd28E4247cfFFf\",\r\n    \"0x02b9B687d0496E682B05840CCF1079A085F426F7\",\r\n    \"0x34c7D0638Dab854c7246623575B7839031b4fEF6\",\r\n    \"0x33326fB672959b266E085D9d464346DC609Cb570\",\r\n    \"0x7aE877085666a610810774F39F42F783Fc89fF0A\",\r\n    \"0xE7902034B87e437247B7eccf9C7F676468840b6B\",\r\n    \"0xaF647b5B3A8D9a123C85C0f8da425ff4426d824f\",\r\n    \"0x0F5DF4A819C4A9a6bB7c1B367dFe5544BF783cA2\",\r\n    \"0x17D0f6E021792BF85F737e4e2983ef4fe888a8C9\",\r\n    \"0xA3aCA37BE7F01ffA2C3e9d790b49B9A4EdC90ba8\",\r\n    \"0x6dD3A7AA8e9E5556f7FEf8A32EE615e6995ECAc8\",\r\n    \"0x59070D3A969240CC9182C9c34fC044a35C0336d2\",\r\n    \"0x0482B7C6eA6D9d8879730981057612985956413c\",\r\n    \"0xBfaB92C10A840Eb58D368a3a5A38efdf810189f9\",\r\n    \"0x79FdB785A5b4cd3878F74CA8738E4539c8F67dE0\",\r\n    \"0x12a0dd19D3f878697c7A1F804AaA1dA84229566C\",\r\n    \"0x20a279e50e79461ece4e81718A15B8bdE2D978ca\",\r\n    \"0xEC8982195F339e202c0450c7BaA82Fb201003222\",\r\n    \"0xd1A42FE4871f99b219859b812E7ebAA311149074\",\r\n    \"0x59724469A5e6E9e644f8CF9DeA6C734105c0848F\",\r\n    \"0x14a34Dd5615Ec0322CF9E95C325e6228D0f3B368\",\r\n    \"0x700A4D8A3f6985db5e994d525F43D9D3A03Ef48C\",\r\n    \"0x0b9ff1dB745F724DE94D43a773D37dB22f91bFAf\",\r\n    \"0x51EA33ED233eC4Ee30Cb73e9e9AC11Caf9abaAb7\",\r\n    \"0x8077a6e270D3aBFDE03Fd299C5B8cFEB1510A670\",\r\n    \"0x75fA3a80DE5fa58EC6Daa72eA63804A4b546A849\",\r\n    \"0xeF383313b38795B0c6fD0A0c8C2e13B7E58a4748\",\r\n    \"0x4f837eF8508F7E951048E6c0212c936e6a160318\",\r\n    \"0x4B83c3CAf46c82a2c755242732a28FD296A9Db4B\",\r\n    \"0x1Fe82beA7Aa95e9595777A10712a4A60BCF9c6Be\",\r\n    \"0xa5bf3A98dA00Eaf12c5ED16b127a92D7640b93ff\",\r\n    \"0x1f069969d4050662a726b6138Fef3E944BaDB469\",\r\n    \"0xBfa9fD91e9baB2Caa32deC3777D6bc064fE48263\",\r\n    \"0xF30A7065824147f9969fe9E44F5500Fca35D2E96\",\r\n    \"0xebcd2D6F7367EB4A0580a76feFeF2A13000E78e3\",\r\n    \"0x5dD7461a00459C532B6DADD0F4Fd24b0D253c624\",\r\n    \"0x1c79915f863B5392DAFE699e45203B072A66850b\",\r\n    \"0x0c1400a5d03A21e98Cd91331eD1Aff5a033aE1d1\",\r\n    \"0x8E4B61d12980713DB1482B758C02b5660b8a1f81\",\r\n    \"0xd2792379AFFdecCc90A2179998d42174d768d5C9\",\r\n    \"0x37023C92461eb695Cc8860F26c96D37a477102c4\",\r\n    \"0x6Fe2b131A371D16DBa703db48763D45434457e8d\",\r\n    \"0xCabB179ca4f9360e4761121A2363a3AF5587B1aA\",\r\n    \"0x38B73Ca7297c0E5ea645D0222B4a8AAb6B5f43Af\",\r\n    \"0xC69a35275A656c7246EE6Bb17C14AF66B675BD05\",\r\n    \"0x1eB4F5aE6E14F6376b7175656994F58ceA565C0d\",\r\n    \"0x54c1d1ab01D00d28929318DCb8a4c8906691EbB0\",\r\n    \"0x7A3C562a054022389CBDc49ad795CFca3EA15016\",\r\n    \"0x00E8281FBEF8E201F8313EBb853Bad3325d383aC\",\r\n    \"0xdD903A0E590F5781fF384Ea030bd894b76e65175\",\r\n    \"0xc0EaFB637d165529d164C4f5EC9Ad9e325F10d07\",\r\n    \"0x56C7A10D2732ffAA060dE830c79758ce197f37d9\",\r\n    \"0x1d6CBa2D941c6800deb7dC4eDa00eb54d16210f0\",\r\n    \"0x18a7b50C5c4e695C69A1eED614591c3d4FC90BF6\",\r\n    \"0xd720a45bA17b9179A11BA77Aa97610b500ED006e\",\r\n    \"0xb3DE11b0c8F258427cDaf850fB8B7AF28E589883\",\r\n    \"0x2d82FB8556ECc76ACCf1a7847D551b34237307d2\",\r\n    \"0x4556B7f8A2ea9413ab4FB931B3AE91d0165D8207\",\r\n    \"0xe25F364ef1fD700Ff9Ae425B268148E00fDc8e27\",\r\n    \"0xCA57cB668216BD0BA41702923E01739cE6a110f0\",\r\n    \"0x1A95a864d61766B90AC1970245a5E3b0cE19353E\",\r\n    \"0x9460b1679D6c182992251393FF45FE54ee4FCC9B\",\r\n    \"0xbd8811d58783AB6Ea58e43db5f528106F0C0f31d\",\r\n    \"0x083Cc3FeF3d65E48d6BAFFEF1826D02B4245F222\",\r\n    \"0x88eb60bb2c5776D01606f012cFB8179a0d35fad4\",\r\n    \"0xDA49B81f788c672096a8Be4d3771b0AA65fB3F47\",\r\n    \"0x1152b1ee90cC203bcE554ce534407792126AD9c9\",\r\n    \"0x86bE6D4cc50fB193bfF42b99c46b6e8a29d051FD\",\r\n    \"0xC37a55499C6CE3968Bab85C029fF02386C2F94d8\",\r\n    \"0xc4b1293373d8e00A7d02f8272a7AbAd1c3538681\",\r\n    \"0x45171dAEC6c825c73EC66A2Da0bC3F06546399a6\",\r\n    \"0xf04Cdc1d717f42f5C8a913dF000cd8aFb3EFffEd\",\r\n    \"0xC9909df08b4Fd56aBD998b2C3abFF54Af0C9378b\",\r\n    \"0xd06aE0F64D80f3Fb118B4C2a6A974Fa9b08363EC\",\r\n    \"0x442A55DF206362B7677610a816727f9D985F4f32\",\r\n    \"0x633834E27D48592e66a7742cCCA8c061d8B6307C\",\r\n    \"0x44004A87CA90F30868d344D7F3177765Dc48D511\",\r\n    \"0x3804D405a05f073d8C5836e84Fd4293E5debE1Ef\",\r\n    \"0xED1Ab6B185C969F374CaE6474da8768e9e970f97\",\r\n    \"0xC310A010E9349af5Dcb8804C24bdc2B19b017d11\",\r\n    \"0xF22C250a7CfCc53eAFAb5c5A027DB4568EC76F67\",\r\n    \"0x0837a2f90079eAFA4C9185AEa59CD9A47245B195\",\r\n    \"0x97f454708fD0c36246aB00348c792f0aF1cee4Fe\",\r\n    \"0x972776B9A08dd5f1BCa29F0084E0f8CBE7FB4A11\",\r\n    \"0x93682993BC684e3123A26f095cdDb70e22234b6a\",\r\n    \"0xB2f2aFd52f3749019c2e89a43b0772e321fEF638\",\r\n    \"0x5C7113BeCd60a316a44b4498Fbb623710965dde4\",\r\n    \"0x2bF70d296A76372C17194DDf39b25298B7850A00\",\r\n    \"0x92c90a4eA6F205dEe545ac348bBF005C4a019c78\",\r\n    \"0xD1057878AAF096d81d05E71dD2Da79E2070495b2\",\r\n    \"0x58D952128BEa84EB1b4CD476FfB60741884DCF2c\",\r\n    \"0x14775e6cBf8aED12Af119F767D98b531DFdf7478\",\r\n    \"0x33AA8Ef169FEdfBDD3aaA28B131f3795C49197B0\",\r\n    \"0x996AB10ad9fC7270103bB2f7Dd5338C175AaD1Ed\",\r\n    \"0xaFa8b9C3d4227Ce3329c016C1d0b399EA73FA80D\",\r\n    \"0x3E71EB888A8b560337c41FcF5FDfdD90043F3004\",\r\n    \"0x9FC547DdD279618622b3B02204066Aa4af5bED9B\",\r\n    \"0x7a216CC61f7d308dc4BfF0eB8f9E91827EF2dC50\",\r\n    \"0x92B886d05c30677F1F596F35e8099B79fdd670Db\",\r\n    \"0x35FeAA15269d71d116Ed269a89D22c02d1450456\",\r\n    \"0x84a878F20E2aa5522AC8027B39deB7c80050F475\",\r\n    \"0xAA5920a2E6a6287669937491565D80F23f2755c7\",\r\n    \"0xA65DfD97f0Aa09e2332bC88314E5104Bc9145A18\",\r\n    \"0x42f0A21BD3f513E7B96EEff3fe206eBd3e2Ae88F\",\r\n    \"0x3A87081794fE7506ae0F7cc30a64ad5FE82dC47e\",\r\n    \"0xa30faa7e84b2eb013431bd1ca185091933c465aa\",\r\n    \"0xfa2448581a1d07c70C85ef0b2C9740d3f24832C9\",\r\n    \"0x918555Fb018f189ADA65b8a63ed991De6706B9a0\",\r\n    \"0x4E3585dD1D4e11Cb0d28C432D2E1ab5dCf0F4088\",\r\n    \"0x3C475260731F9C1bbA82FB3f44c41A4FacEC2325\",\r\n    \"0xD470F41466be732161cb18dEe06bb654fDFDd013\",\r\n    \"0x1360FC7a6263cBC0C2B7F1527EFb6430B1265e67\",\r\n    \"0xca17289CFf8E994BBC5A8De4BD395E051b8851B1\",\r\n    \"0x864391cca18b3fd7eFb5618Da55Bad4C7476cc93\",\r\n    \"0x6Fca785d2254d5a887D21b71559eda940aA4ec59\",\r\n    \"0xEA2C60721299F45e7B8af78E7dCd68E4E33261f3\",\r\n    \"0x51e945c8E862E262B5Ac5e1190090Ac3316aB320\",\r\n    \"0x79758B7cA88CDc689Fae5d66f5a34Fb6709856e4\",\r\n    \"0xdfb27231979a3367579794001C006F6d3875D16F\",\r\n    \"0xF10E126c56d6A7571aeb06b335c1f769CF259fF3\",\r\n    \"0x59C6e2748cC630fBBfFBDF9b5DacbB2d3b18D1A1\",\r\n    \"0x0f1693EBBaeE3475835665Cf4FF60Fa1b8287e8f\",\r\n    \"0x648C285104b98e08d8377A8e12B0D764Aa4b1BaE\",\r\n    \"0xf69D42fd8B995BD1cC1EC57D9b966cDDd6096393\",\r\n    \"0xd7D34341F9DbA31CfcA2133a519393D7d990E0b8\",\r\n    \"0xe1109849fB8D88094D743a57838B21FE6d19BbF6\",\r\n    \"0xa9D2619e6D29eee97cd30AECA22D317b4Dc33227\",\r\n    \"0x0706C2C71536ad3b02034d4dEF9137db75409ed7\",\r\n    \"0xC70d941193F272c10e39417433DD7B20b4679Bb8\",\r\n    \"0xbfc9ca1c434ab19E5F75ACd2d603dc0621ef64E2\",\r\n    \"0xb2c1f86C893FD655Af2C85ae31a957b34b7bf212\",\r\n    \"0x4Fe4470232e236c7A35bf19A94317465517990BA\",\r\n    \"0x0854d59f5Dd94b579CA9BC7689F96f3C744e3bF2\",\r\n    \"0xA120A5Fedfdad32Dd314c0ef64758457837BA94D\",\r\n    \"0x3731E3D87B67920D61b052AF36F137a2A82530De\",\r\n    \"0xf479008f57b1ab8dec1fb867162848516c7f65c4\",\r\n    \"0x8367A713bc14212Ab1bB8c55A778e43e50B8b927\",\r\n    \"0xB6239213C29DB263572e754c179eC0FE812955BA\",\r\n    \"0x1E454cfCa1AcA1CC9288270A46430b118Ad1b4Da\",\r\n    \"0xCEda7F3917dEbb1e229E8F64bb77f80437699129\",\r\n    \"0x680b3a541583f8abeff3332b5fcad27647a7f610\",\r\n    \"0x309090a8c9E1C1f399b66e6E649c35CAB4B969c5\",\r\n    \"0x5a6198F452BDa151433381E4183bB6fE14AFBEf7\",\r\n    \"0x57888a764A3229f8cEb49e0384Bf03C1853D2133\",\r\n    \"0x8bEB58178be1Aa07f56985EE688A4E5536eF1d5a\",\r\n    \"0x5e871C649f5bac483EC63921176f42dA391117b3\",\r\n    \"0x41e166Cf35D1d9E32CcA08c0b6F764503e43C677\",\r\n    \"0x2e25a41BB451F3058dcd083A51D96CE0B1325259\",\r\n    \"0x49Dd0A2212c6C4A6253c8Cbd0D087b7C8216E934\",\r\n    \"0x475b0FAcD047993cf813B41F72144C0cF740DE05\",\r\n    \"0x862e99EFB8307751fe3974b11F671de90d1EF46b\",\r\n    \"0x4F19D704c9d6F5846E55F86af404dc8D06ffFD6C\",\r\n    \"0xfc63fbc70657E4719CBeC88461618fe1A0bF659b\",\r\n    \"0x97783ec5da1ae87AD85eA19734D43bCc54a641d6\",\r\n    \"0xD3C6E4583BCc33339D733cb35034362D134A6749\",\r\n    \"0x2008195b3672e98F64416626FB5f778cCbFfD814\",\r\n    \"0xbcc1a3455bfe501cd163c3f1ae85e038253f252e\",\r\n    \"0x5fe23b23407cabd66d19b9d23c93c2464362870a\",\r\n    \"0x4FE74061C948B7F93070459bD9BeA16B5cA40Bb8\",\r\n    \"0x00D9555c5625a426e45fB0B6Dc23A8E3fA5A1ca8\",\r\n    \"0x77394B0eb1274384F728E0DBaf5De53876AEbBbD\",\r\n    \"0x823272D88f88005FE1681Ba301146C24Cd693e53\",\r\n    \"0xD7477fD6DbA1dFa809c2E01f7fb86f90F231a340\",\r\n    \"0x6a2Ebd6b63Dc3F8cCd1f91292Cefb07255e01c86\",\r\n    \"0xc4f777efb376861E8ac4870AAeEB54b28661e531\",\r\n    \"0x2cC71CffB7eBeE2596e60b70088fa195397494b2\",\r\n    \"0x8cbdd1899088D31d4654ee9F015aA4a07e0246B0\",\r\n    \"0x598097A84df7a554cE4f567787bf750859CC0f4B\",\r\n    \"0x8a78132C8955224f0586A10257dCdE8e1159C47a\",\r\n    \"0x0E25c997FCfEf6625087a0D7574BDBbe819D1191\",\r\n    \"0x247C2c326B397b57Ea2301920d48C81B7a74eA3c\",\r\n    \"0xe221630C7e8913DAd09BA1969b4444144E67c6eD\",\r\n    \"0x881F10fa370a76f95277e06F63fc558a0A34326B\",\r\n    \"0x30e69C65230D4A93602d0859af78DfC56306Cb49\",\r\n    \"0x676332Adf7505A4F33bc75F26e795c8FC6917f84\",\r\n    \"0xf474f0cED2fF1acf9cF9E0684C3511f81f0aF997\",\r\n    \"0x2354BF390309B5cBB12A825aE1AFF3a4fE3c80fF\",\r\n    \"0xb186F629Df816099Abe2BFA70EA8a4B81Faf42C4\",\r\n    \"0x7109A2AcfCb3524196f0d8a415f5908Ff254a5B7\",\r\n    \"0x4539cf10962d50C0750Ac28bfd06Bf5c3d625AF6\",\r\n    \"0x016Ce4dC838dBc89A92f342b4b1a5Cc634De2EC4\",\r\n    \"0xd1bC1516538b53982a284FcAeF5BA8135177AbE3\",\r\n    \"0x7C97d95Ee6248955a3338909Eb9fffa2812798F8\",\r\n    \"0xB1b99fe0242901f34a4000F76E6f98E38222001d\",\r\n    \"0x730a2B599580492ee02CBB9CfD4C0424c67377D9\",\r\n    \"0x7f558d607A6e843aA1edA733F4d564D5618772d9\",\r\n    \"0x69A86b7De75fFEfc295b09E0e191AF0a484beCc8\",\r\n    \"0x65926C718F8085A2557cd789490253AA44E2a260\",\r\n    \"0x16893FA514769e0Cbf2C5C030f499fCe9e021a29\",\r\n    \"0x253a41571830Dca332724DFF29Afb8960ffcCDf6\",\r\n    \"0x51F49515a4c864Df28f1698F76218DA920789f74\",\r\n    \"0xD74Dd5fa46cAe727C780699EbD9cB4DCF0125Ce9\",\r\n    \"0xDb7db93F738563C91d1D71fc7Ce26c8aFbC309D6\",\r\n    \"0xE011cf37Eab17A96c2B9A563Dd9A2B5726827921\",\r\n    \"0x985A1378A793eCffC3977d3Ced3539e483a8F701\",\r\n    \"0x2083B4D378239304CDDB7f4eD1DF31349E3ef7F6\",\r\n    \"0x5a41be3ae1e8bDcdf3aA3fEB4995934AD37559af\",\r\n    \"0xd997a74f83aE316fed6555c76931D2DdC6E3b9dD\",\r\n    \"0xe05Dd83d9937B5457E5a000Ca47B4997c50fC384\",\r\n    \"0xD6BA32b8ED27a53ea13ef4780E1955574993E6Da\",\r\n    \"0x11B1712D85155A71d575634af5d465949dF4170a\",\r\n    \"0x97919B2F3Bc8FE7Ea18B6E7BC8b25d55348e5A66\",\r\n    \"0xD25e5D27A1857a5655c6C4307A0AE979c49CC164\",\r\n    \"0x36a300372C06d5822E69E997E542780D33B95B0D\",\r\n    \"0x3Dd46A2De47929fED174884a167182f2F265aF8D\",\r\n    \"0xE34C9A10B0C1d7C680a7730de8d33a2054b38602\",\r\n    \"0x50BBA166Ba5418e9c720a8F4A1dDF160D181fFe5\",\r\n    \"0xbF146E9b90297470Ae466800e365AFC08C9af9ac\",\r\n    \"0x1eBA89a5B2802BB429928771B01276Ab8E0b9988\",\r\n    \"0x543e2106806E08c8B34D96aaad6B56392a4AC681\",\r\n    \"0x6b3Ad5a259E1A107D8983dc0d21eF22084c86e82\",\r\n    \"0x2dd622Eb76e88682e1865a30cd2AB555CBF755f5\",\r\n    \"0x164Ca8377c8dc1B42AB635Fc00FEB64A8E032CC5\",\r\n    \"0xb219E78DB5fB43AC6E1FF1750F9ECba1b3410407\",\r\n    \"0xC1D91798d36e4A14ebF08208287302A597d7E759\",\r\n    \"0x844513313732Df93A7D3fe05928664cF6E8EaFff\",\r\n    \"0x7c98B3c378455C94D18E5a2E954cefaDCcbc441b\",\r\n    \"0x4A5E06f51B05AB06a2E1Dc312B79183829312971\",\r\n    \"0x5e9370d43b0fF21808aF2699628177D88f850Efd\",\r\n    \"0x2168aEE7E4e51539DB625CE41f2066F8dE83a701\",\r\n    \"0x9a71d14533af43EE20990717a19887C5eCa845f2\",\r\n    \"0xD098720172d489EEdF2Ec7eD0202750790F4693B\",\r\n    \"0xF8B4bfA6730fE7378DFE930cdeDc144dD06E15a8\",\r\n    \"0x6F2506224Cd50a967001e6F95c6f74660AE77f78\",\r\n    \"0xf1Db56490C220D42f149D299a2c167BEa74d84A0\",\r\n    \"0x96aB79309E2103d80AF99BB005792F7079a7669a\",\r\n    \"0x5Fd9Da9734e6bE6b45Fb7Fc740A4706f9ca1594A\",\r\n    \"0xDC0D08c6bC98EcDf176941DE7517018f613E8977\",\r\n    \"0xB90035D312f5afc8d4a9E44C4Fc65d6b9A1FAf28\",\r\n    \"0x99F9Fb8d2Eb738A17E3448D085172b5Ecad9ac85\",\r\n    \"0x7F12698Edb37F3647ece93B99Db0a0e95282f837\",\r\n    \"0x92A5e931226473dDf084ac8d562F77291EEea6C5\",\r\n    \"0x8023E8852EC29357e35F1Ce8C47ceA0542B45418\",\r\n    \"0xaA993A40732873c430d29Fb8D8016BF861aD0614\",\r\n    \"0x22E7C8755B84F667F8c3c1870De96e843B599bAC\",\r\n    \"0xad472c36E424C8A79a4D57fadA8e518C8aEAE758\",\r\n    \"0xAFbefE9F79E054816BC8A402312c8c67224385c8\",\r\n    \"0x26d747d536230762adcB130d542a752499cf2951\",\r\n    \"0x03cB11f8ee828FFf00a9773d35996B7ae3C604ff\",\r\n    \"0x231D9e82a54D9Df367F39B89cf74DA1A6e006A5B\",\r\n    \"0x641836923a8980faCCE421E0F22902f97B6Eddb5\",\r\n    \"0xb2639B276120f1b47829faa327D08B654e4B8328\",\r\n    \"0xCDc722CC2f47d95f9621F1cFbe867A09688d61a5\",\r\n    \"0x3335079F069F8846a95656Eaf7E0C553D418Af4A\",\r\n    \"0x34145EaF32fcF5b7284C053c990706BF0e04ea4E\",\r\n    \"0xe2AAd165d5dBdD1879266b62F0cb0Bc01E822A5e\",\r\n    \"0x5E92A688387d317BE3DB80258e199094a0C2a462\",\r\n    \"0x0839D2A210D1BC8458a129568915c1AdB7A1cD38\",\r\n    \"0x8BA98E54602D320E4f877D15EAfb5062f6194997\",\r\n    \"0xA0A68a942AaD9A8b0c03E4a9E2E02485A9521091\",\r\n    \"0xb6B7E606916038E28b3668919c014e838Fe5EBA5\",\r\n    \"0x59BaBbCa20b2Af1080b36E39D7e5e0d4faB0ce13\",\r\n    \"0x378920A5B8925A0eC9C81c452fd036ae78DdB21d\",\r\n    \"0x87DC96658733BafB65fC3305631efb67D50C6739\",\r\n    \"0xB9fB9C381cb5A3b783C54A2E4090E68b4581ACC2\",\r\n    \"0xE69885f6C47B67907225234b7d31ad8ab9a15581\",\r\n    \"0xfc29c1ee0ed33103bc13faf34773812a9ac63107\",\r\n    \"0x637f2BBE663a3d4e286f4dF554906EDce1d7a474\",\r\n    \"0x70A7139929a47913e035206020CA1593A388f433\",\r\n    \"0x5FF35FA1a9055506C7098B957a71Ad89E8a91674\",\r\n    \"0x46061C3b394797c712868cA76831be70FAb14da7\",\r\n    \"0x2031176E0729C175F66531f8ddA75225CB3C20F5\",\r\n    \"0x44B0A9925a3D60B1159CBb1171e123C5ed98652A\",\r\n    \"0x28d40Cb36C8B3A129B64aCE718A7CebA3bC2e79b\",\r\n    \"0x53b04158a864FC16F3f3c2D4791dee56b4DD7234\",\r\n    \"0xa916184AA790F973D9baBCAF3A8efF90Cfc040Df\",\r\n    \"0x1D1c4b5acD66E673343300738A78Bb18C54c7d6F\",\r\n    \"0xEf586a1F102440FFb770b4c040c519F22586E246\",\r\n    \"0xdfc8f0903873d8D48B1B4F86433D7f2370bEf638\",\r\n    \"0x60Fc1056e67a156cEDdB48dF1C06aBD0a1014Eef\",\r\n    \"0xD11C822962fdAa8A5aBde089b2f4bb1F83f1E445\",\r\n    \"0x1e81866C8c9b03Ce9153e04260C385889d779f59\",\r\n    \"0x3899e0b2299635048b12846bcc674d16b7a6216a\",\r\n    \"0xA94d267811496Af6090d5aBba014EF55F6aa23FC\",\r\n    \"0xF0607e43F7Fb2C888324dEAb09E34e4aBfEE6483\",\r\n    \"0xb2689f8360117fda84fdc8b50ec9042323295b88\",\r\n    \"0x7a8c6228aD6B07eab19b5E53aF1DE72656A5D1E8\",\r\n    \"0x453c830cD2dAAe480A2DBC2c3a68B090faDBDfFf\",\r\n    \"0xF198597ab5fb370E1CA3497f96D02999180db8CB\",\r\n    \"0x32966eEA8a0107D3E5727d9CA67Ee856e9CE1F7E\",\r\n    \"0xD6f6248644cbc3407CB7F63b31CEDC2C77044375\",\r\n    \"0xA50De7273B15E125fd0e27470597182Bbf3cC25c\",\r\n    \"0x18A00535b893F63abA199babF1aD87197af67485\",\r\n    \"0x49149fc8AC2F29b7d1597C4e78976f0572B7c6BA\",\r\n    \"0x283FBAe02e4153C017B9D61d8dAd440c9878436c\",\r\n    \"0x8918cd382dc44035a513d828D0fa226Fa462F5ec\",\r\n    \"0x8B3D01cb3741AF3597571b49adDD3af05d8f61eb\",\r\n    \"0xFD3275163937c3980CF6931a43CE94865b30669B\",\r\n    \"0x38691d38317A32741a1B91C02d4896dbbCF4ad85\",\r\n    \"0x2cd03D0681ae85E91405B141106B0FE6AB917B36\",\r\n    \"0x1721Ee6FA840fA02CC6bAC63c1E00A7CE2De3a24\",\r\n    \"0x30edEA54F763E0DC07B69aC4431F8568ddF9EB35\",\r\n    \"0x012b84787f3d55b89a95bf01ca8ea853fa5dff03\",\r\n    \"0x6899E742d1B809cd5D5Af9A3D2aB2283baf04c80\",\r\n    \"0x8Ebbd76fF50393F1AABfB72ff15ed63Ce5C96806\",\r\n    \"0x98459Bf154dbA8E2C28bE52A644d435107C7De64\",\r\n    \"0xF14474243B3839ECD21645A3db56C2Ed5938917f\",\r\n    \"0x9C996076A85B46061D9a70ff81F013853A86b619\",\r\n    \"0x567003cE7E32623ed175929F27F0E3D030B9d804\",\r\n    \"0xD102698d2FE71DF82f5FdcAB2F69324745CC20C4\",\r\n    \"0x1D50Eb0c7e75815Af2857966978c6A3C90a2D848\",\r\n    \"0xFB905Cd6BFCEaA3774F97A07794A7DFA9d612606\",\r\n    \"0xfF5cdF262Af69795cA9f7864B1BF6102001E5a17\",\r\n    \"0xc2f502910B88f976f9d520E2ee4a0D38ad03f6F0\",\r\n    \"0x355Ad77f2b646aDA15f7de15e931F02D61D38b14\",\r\n    \"0xa68fd7A02bd610905f4eF25C34b54613C7aD302F\",\r\n    \"0xD8661fE67637B52B7CdEAe2c972AfD8e7C181049\",\r\n    \"0x56B6673c3bc30Fbd588EA60BD32228AC1947387D\",\r\n    \"0xd33E6Fe5a361eb55Fd2eD633D895A28f9D77069A\",\r\n    \"0x8B593c11D308cB2a736695eC101Fc4BCd7fc4Fd9\",\r\n    \"0x008b997753f5daCBb8edC90fFd02469b0e5A5F51\",\r\n    \"0xF367a2D3E30fe37e0f48285D1a898450F69FEb7f\",\r\n    \"0x401eab8702e5A4014E1A39730fa19e9B1b7DEEC9\",\r\n    \"0x8917BC5e3c572eaF1AfA5007734646Effe6684D3\",\r\n    \"0x96A0adDf09eaAA45E8481e83E60EE7f7381089F6\",\r\n    \"0x6B76b4C044C3282440697ced926Da18E87906E0C\",\r\n    \"0xcD4bB4170c790C73dfAe483f9B7c22901D7b3c5C\",\r\n    \"0xA0D7ED7a7Fbc63a42B0BDB3c9e71fdEde62f5462\",\r\n    \"0x78395A68fd6d96DD564d6bAedCB4D829552d4a88\",\r\n    \"0xB318Bc20Ae75b9AfE5C2Dd8f51b33E4C50084368\",\r\n    \"0x7b40fD570E63De0df28635Fe74b0Fa433Cc317dc\",\r\n    \"0xbEA91b7F703d69878C839cA68275e84DAe32C4E7\",\r\n    \"0x81EC1D8692712c5CD995355777E1a59Ed1Fc83e5\",\r\n    \"0x6588453BC0C68f6b494B5E9C27Df98B9c0B4A34e\",\r\n    \"0x9a23348b2Bb8d680B97A46f5dEbfc54C6042106E\",\r\n    \"0xc2bD8127d779FAd560081827DB0483aF4aDe1bD0\",\r\n    \"0x1592EA026d5207FDDe491f0f4e4D7257a01d7985\",\r\n    \"0x1f8C8bb4971C42e441E2Fc3662bCAC89052d4373\",\r\n    \"0xfA949Ce340ef6Ea03c94002543E01f33E0920f62\",\r\n    \"0x47BFE38886C9Ae111cB9B3A2b9BC7CA0F97D5369\",\r\n    \"0xa161B67dB3dC66D125bb0759dE8159915625D2dB\",\r\n    \"0xa2918375c4315611f6c743e45c93b6dbbd9dd151\",\r\n    \"0x8ebbe591B75ff6132F85f48Dc29abbc09cbd3dd8\",\r\n    \"0xC52383266F67aC0e9274ab9CcA142C5389233C22\",\r\n    \"0xD39255C361B5f5eCd64569c07a91B457E529ED5a\",\r\n    \"0xf7deB8B85D079390d3691e23E7d2886689c75c76\",\r\n    \"0xef8197dc42B749748dC493b8061c0594be7eCa10\",\r\n    \"0x66cB1de07feAf4e6f72430e0756f019138882DA8\",\r\n    \"0x66c31c7f9f7b83e9f3dD7D4a1927718699C0Fd23\",\r\n    \"0x1731A1e2053FCA86Cf11163220c7B1868C429dB4\",\r\n    \"0xcD7ea49c3033f80A9D453d04c8Cb78e4D9936954\",\r\n    \"0x1dE19f76Cc680b71b5e3Fce58082b3580b8dD577\",\r\n    \"0x556681899DBB90a2E9b379f8E2929F7b558069BE\",\r\n    \"0xd386c406356B231c7A34F37E6E9E24a59E592a8b\",\r\n    \"0x20ea89C8A7714fc3674F42885C810e4A8736eB3A\",\r\n    \"0x3496F325922eE015A7AC1698a46ACC3594946F56\",\r\n    \"0x9b7657D46ea863bfDD0c48b4C41794D47e95E6De\",\r\n    \"0x95956229dafAE0ab837a1f5Ff3dDE299fAfa9dE0\",\r\n    \"0x62Cb743f12Da3144972c07ea05FE42A0e4Ccaff9\",\r\n    \"0x6C1f19D7C36A715A4217145747909249543b3F32\",\r\n    \"0x7fBcE42455AA9B092a53154c9a2161250E8D8d5A\",\r\n    \"0x99a240283d26c383c2ea48c71C076f2417CBFA73\",\r\n    \"0x3793cAD6f8Ae1e4edE9E85Fc6b14F2549f3B431b\",\r\n    \"0xF63415762CEeebd55ADea25D8883b60fc5bc87cA\",\r\n    \"0x4052B6DaF98E8c135ED94852F87905fEBbFF13a7\",\r\n    \"0xc2739fcde064d56b85207ac8d68f2c9d03ff45bf\",\r\n    \"0x3b3E78BdAe12B20A4D76F5241B9265Ab60953D5b\",\r\n    \"0x66AF6393c7c017664ef826e4BB26934339fc6BDc\",\r\n    \"0xE31393b7B2cd8EeBfF53D3244491299AA3D39653\",\r\n    \"0xaE778fA4ceA90748C90e3a3B2d1CD9F8dFDc09Ad\",\r\n    \"0xEbcA3452fd22Bf4854265BEDf2b6E5AB86f1b549\",\r\n    \"0xfb9b23CC192D90FC1D114F73cC559BC4F8F54ed3\",\r\n    \"0xb6702a040854c85336aA6643D44C6B738b770936\",\r\n    \"0xE0F6b2D98A66c77e9E3bd7f03c2eEC2D3090460D\",\r\n    \"0x3742659bb5e5db436Ccb5AC0038fa51b3f7e115C\",\r\n    \"0xFceC68c2a8e1Ef3FdCC61ad58F3437b6D81078f9\",\r\n    \"0xE1856CC26f8858a8Af1B5925585A58995d3b2FB2\",\r\n    \"0xD6574F18A8658249a26957275BE8786b11364c0C\",\r\n    \"0xe1da4f75b89f963487b4721daa9e4fe6de2bdc05\",\r\n    \"0x7584FC04E0aafB5Db76d60C4348262486353Fd41\",\r\n    \"0x38df2b33995d7d791d7158d5c405ba15a6d2ff88\",\r\n    \"0xD20F3F6C4C7961Aa0bD5340F193E0594d980355a\",\r\n    \"0xb63ea4865cDfedF3A7bCa5Df5BD49F04D59ea348\",\r\n    \"0x4EE609771ACfE2037B6e668f41274E1D75cbdcD5\",\r\n    \"0x831438B4418e494709C17CB008c3F9cD4d7dD46D\",\r\n    \"0x1529d2e640f7febd3e9dc40728cac060a2739d70\",\r\n    \"0xfc421AF2800084492962a069d04dAF27F086af0D\",\r\n    \"0x631f5738Dc52FF7D29226383977a33334244bD2e\",\r\n    \"0x32245cAe7EbE69C62a491cA27173CAfdd8a1Ebf8\",\r\n    \"0x73Ca689D703dA4F64ff19F68e388a96eDCF3660B\",\r\n    \"0xf4ca3774096d639A7bBaaf5DFf3604428704F9f6\",\r\n    \"0xe4f09b81df1c57d0ceb2515491c4303f618c685a\",\r\n    \"0x5D9AC3E11A66a3B896d299F2Dd1ED34c5AF4c8F7\",\r\n    \"0xC0376EBFB615471cfEe74B094130c62C882c1677\",\r\n    \"0x69949F2227E8f4a8C9bb78947DAd267C8ce2AeOD\",\r\n    \"0x4c695C50B86793C16883320893CE0A000712277\",\r\n    \"0x70CC2Cd17112b1107917131C2E6D939d0b6df194\",\r\n    \"0x5A8106b8F2cB49C2553566765701d322E33839E\",\r\n    \"0x00C1e13B21Ce3e604D7CA9aA1B307A9C94a7F45d\",\r\n    \"0xd83577256002E1F54CE8536F1510e175e7D1db17\",\r\n    \"0x74230C10229E924a2B08734623Fae876975D7e64\",\r\n    \"0x16929a36cAac5e5fB57c12E88bCA485eca6f7c99\",\r\n    \"0xa9817a524E3079F233CcB5a1C749B1AFee8a878C\",\r\n    \"0x458e388Cf2224D17a4BF03eb1104F9181779edB4\",\r\n    \"0x500262e38363edb3bcb07b0484306D2A885c6006\",\r\n    \"0xC28F26Cc4e24Ff5e68Ca70306DDb26cf156Acf0a\",\r\n    \"0x55d08E5A04af580b2FEbb57E01F01956b46690c6\",\r\n    \"0xEC72075231207b9c72B196915C19B810FB796ccC\",\r\n    \"0x33992489d2D43c324FE5851d3A4F487def1B3204\",\r\n    \"0x563b3d92A0eE49C281ee50324bCd659B2bDBA414\",\r\n    \"0x514712e972fc247e3bb3239d5cbcc94206a45c99\",\r\n    \"0x4Db595Dc6F1aCD8A566d1ff35B4FF1a0Cfc46Ba4\",\r\n    \"0xc8d7f5D5391795E7159233F252CEB5ab7c5B3aAA\",\r\n    \"0x9639d01559D4cBd45E26EDc743bbFd3AC3FC84f9\",\r\n    \"0x35e7b325F96cf228A500C96dfa9d62644240cA0C\",\r\n    \"0x7d926384003A577dD2b007b3EBbfd591c7a8e4A5\",\r\n    \"0x2bC97FfF49d3C8Cd8800686784C81635C888DD9b\",\r\n    \"0xee2a4c655EA792d92F12A3Caea21188be6dEa808\",\r\n    \"0x0eEf7B5D0928EbC497a46D0f81e8E3AC986EE338\",\r\n    \"0xdd914ab65492518Dc78C133f86A35644004668Ca\",\r\n    \"0x7497fBfe40f2424A17EE6C34311B3604B447A642\",\r\n    \"0x64B026bD190b097c009e9EA941e258d2c5c3f042\",\r\n    \"0xCa6B84699f5F1Fa034849ACB4A9fa7d26eA8f877\",\r\n    \"0x11bF9016398205Af5A3d0f73Fa859e866Ff24A20\",\r\n    \"0xf3D6534681ed73E23d53e2298a92BdD92Af9Bcd4\",\r\n    \"0x2251676d1ff6fa9a10878205e5107a399bda4f16\",\r\n    \"0x6b269f3CbA48a876337c35b146904AFdB44919f1\",\r\n    \"0x64257FB84085906c96ba5B8Ec2d193c9Fb3b9e12\",\r\n    \"0x5C851F80b17bBb84D2a9b30291546ae2C6286626\",\r\n    \"0xb4b81b693F322F6dadac99c9DE4366970e99f6D8\",\r\n    \"0x70813e041CaBA3d6245fA5Bc63D7f075B72a76Fe\",\r\n    \"0x713c9aa2bDc82feBc3b7F0e07F8a19A99bF6e047\",\r\n    \"0x70C7ADBfCaC62b465d80d24fF93FD67165444667\",\r\n    \"0x1249AbE1e7586B9E8a03cd6e9c58Dd28e18A2679\",\r\n    \"0x410e867347634a2283031D327461078a72c38a0d\",\r\n    \"0x3A0A8ECD310C23E909f7ca96E0b7Ec42d2C4a957\",\r\n    \"0x01210dbdf38E7281a3C01517C26d0262034b6668\",\r\n    \"0x92D7219ECC41afF2717B92eC039383216AB9Fca0\",\r\n    \"0xDDdD696973fd58dB7Aec22f96FbdCf40371e9fB1\",\r\n    \"0x3AB22C27AD34ade56A5ea4B0E0e3abb40e2B5d64\",\r\n    \"0xF69F2b4B540a734e5b6c8B270DDb43d2F266Fa35\",\r\n    \"0xA1EAA80ce04Ef5536C46Aa7564995d596cA60Af4\",\r\n    \"0xD2Ae26c75ba0d3081d98a67C8d3b93e5Cdd22Cc1\",\r\n    \"0x4780543A8a1FE8853f448F35CA43479EFD9137b1\",\r\n    \"0x1e4eC486f3247f81d6ec98541F1CbFd4125b012b\",\r\n    \"0x53B22A4c7eF7C9352aC06e793F606B0E84B64530\",\r\n    \"0xC8a30572DD036ab0434771786a70B4798364dC92\",\r\n    \"0x47C233C3134576c12204E0B8B9e5A10BD7036cA5\",\r\n    \"0x7bf4209cf7c38bad15c3531a9291a6345f1a7b3b\",\r\n    \"0x790DbCE0CD59eeCE79b5D21844f0c32E0078De59\",\r\n    \"0xc2AD37E4Ef8002d5f2803EF8Ee5Cc8D9c2b3B107\",\r\n    \"0x6EEf09B526d883F98762a7005FABD2c800DfCA44\",\r\n    \"0xDd0A245abCA015B0c6095f4685810B249bd8947d\",\r\n    \"0x6104f6684F4F966E4B81CDf9a6B4836052CDa456\",\r\n    \"0x0CD750168766bC7901532FF5EAd0B153FFdeB41c\",\r\n    \"0x5920d33c06914Df0CdBaA780894FDEc4a23D3022\",\r\n    \"0xdbBC3Aa812B199EfD03ff368C03E03E6286E97C8\",\r\n    \"0x2C72bc035Ba6242B7f7B7C1bdf0ed171A7c2b945\",\r\n    \"0xfB69FC687941d87919B8B2628A8A7ABF41e93b6e\",\r\n    \"0xff8e31Ae12B065539eBe833cA5F13702fAcFb762\",\r\n    \"0x3613F5F1F90cC056315013864b3Df9e3870fC363\",\r\n    \"0x6dD2456A49508B316701Dd0551702859236fd87E\",\r\n    \"0xBFe2F34Bc286E9e5EaC80F4BF968F91690BCDd5F\",\r\n    \"0x423e26Aa44dd6a88D4F69c60B8A79C740905A905\",\r\n    \"0x6EE73bF7C5B8B1e92F4500591cf39C1f99290674\",\r\n    \"0x436354a9899fD706e75B5084DC114D78F4423Fb2\",\r\n    \"0x0289648A1ad3415cB01239e21D80D41465c8d335\",\r\n    \"0x7e6417f27E2F2C43317591568A587220b04CAA2D\",\r\n    \"0x4605571711A3aA3D6452766E681117071de316F1\",\r\n    \"0x318cF77088979C42953D242c66d7AefedC8b64dD\",\r\n    \"0x91ddC94F43e376829E00B443165B434B3D25A0D4\",\r\n    \"0x99EF4260d5FE0C3Cbd6c2512bC8A34706b3731d2\",\r\n    \"0xCF95cEc457A16c3F2e7c3205dae53526eeCAB0bE\",\r\n    \"0xFAa681Daf27847ecd5bE965bEbdC4ACc4Ed8d367\",\r\n    \"0x1836A7d970E443FFf309CFEdb59cDaEdD3c9277B\",\r\n    \"0xE1c4a8b0CAB08F6699B3703C6ffB2fA7Ce9eDd13\",\r\n    \"0xb25873DBC804AfFc4D6Ed3C312A724975de51181\",\r\n    \"0x8E3fADac268dcA4cE80e9AD3A759B186d2DbA26b\",\r\n    \"0x10F963985E0233ed47fA8ff236183C8Bb346F7Ba\",\r\n    \"0x34FcD56F10b403A4111e51a081F3b84743d1d175\",\r\n    \"0x79764B71d51a2e744478086a2eb17A40f1af84FF\",\r\n    \"0xab1De607C62735695F82719BDA9813CC80A2f450\",\r\n    \"0x34624d631C43ca0D301DD93e0F981b3CEF2e29B6\",\r\n    \"0xd61D548CC43D17D894d84f117Eb61C07e60d7e24\",\r\n    \"0x607c342d030C706F82D6Fb012e47BB3cE9cf7cD2\",\r\n    \"0x26DA742B60A0e9733242e37300BEA5E531C72E57\",\r\n    \"0x5b3DBe86a0345CdbfF7027B6A157b751D0Ecc20C\",\r\n    \"0x64a4A5664e7C35707765B907271633f9Edc57CFc\",\r\n    \"0xC8CdEF7A03CBc43619c5d669041B60dA9138e70a\",\r\n    \"0x2da9C5Ab0904cD43175735Cb0f97c45e0C4A9ae6\",\r\n    \"0xe11B455e44C4E7418B30925878E46cf8CFA2638A\",\r\n    \"0xFA2a93Fa238AA8Ea455140B427AA9c2b5e89aEc0\",\r\n    \"0x5E1D66DFB4fDee8Bb61f5E21c1906ebC5371011a\",\r\n    \"0xc348f1dD5EbBF54324B88eC771fe11735aE67E29\",\r\n    \"0x0A6b9c6f1898201807746db420eC8dCe77e426Bc\",\r\n    \"0x3c6c039B3308f12F3971FF6A82E607C635d8a851\",\r\n    \"0xD2D7cD42cA137FeFdD68e64e47c7AC406b20218a\",\r\n    \"0xFE713191605c26815a8495585E3179Bdd75DB8b9\",\r\n    \"0x4C9FA804AA1A6F4F203E90Bbb7aDFd346c5e23A3\",\r\n    \"0x2Fb7e3f5E59d654efcF073D816E1eBC1615305fe\",\r\n    \"0x194db791b2dc05E1D3e5984C9CB93025Ab99d908\",\r\n    \"0xaa38F76b0C57C5C73e10241dc77be6f8fB3b96d6\",\r\n    \"0x7169b89E929F62ebC4bb91Bc89017e1Cee9626c0\",\r\n    \"0x33083E07851CD0099d04c6aE3da6E84139b1C315\",\r\n    \"0x8B742b09B93c5d8cfdfFA42c6165459317B9EF6E\",\r\n    \"0x0194f22057D1f95d1ab90FdedAd1013b15905b9C\",\r\n    \"0xE94edB2F348ddE55AF085Ed2A3837569e8aEb072\",\r\n    \"0xD97f16c7F45B888707F091989cdf5B663e637C97\",\r\n    \"0x04F47994dEbEB253b78BdD463F15F1FBFEEFA3f0\",\r\n    \"0x31a59Adde1BC65297317F70c5Fec38ABc936392c\",\r\n    \"0x4fAf80ccCA6CBf5529673D6fa85fF53E5600EA8B\",\r\n    \"0x9895c01E694b575Ba6FCD256e1536830b547feCF\",\r\n    \"0x4e48428C9080b7faE54798b8bD6D82143514a961\",\r\n    \"0x6e6D04787A0B8Ffbd5d1430d094C3f00de91a80F\",\r\n    \"0xeAf1A69aA181B430584ce8549b7cee7138e929A1\",\r\n    \"0x9D9c533c6d1E485d314927951a63F77c00debF23\",\r\n    \"0xCc6584A04c01908d0691E66EE39796e5eb069525\",\r\n    \"0xEf667e3Df662F7BF26A605EC401e1aFb170D142F\",\r\n    \"0x1f6644d4C0dd94faF26fB1dd9ba88f146d4F0E8F\",\r\n    \"0xC9761D49E42Bb348e7Cf7b9798B8571D0186452D\",\r\n    \"0x11a7242338674cdFFe158109113B1223cF0FD495\",\r\n    \"0x6d42271A95283a1eDc23fa68389c4a0fd89efC64\",\r\n    \"0x4cd314FC1c5DEe91f8EfC317dd8d5e7858ed18E3\",\r\n    \"0x3D83Cc2617A98Df3Fa1A3dA4CbCAD06C8AA8EDeF\",\r\n    \"0xF21B4E402626adA99D76c5206D7B797B4f9D7b2d\",\r\n    \"0x71A3AC6a29bB183Ad6A174A2fDD7770228c3e9Cb\",\r\n    \"0xA3bB09696D10b2e07d3e1AB29799f805E7a1C3f8\",\r\n    \"0x2Fbaa746B41cF25daee57fb1d5228D4Ab17C44ba\",\r\n    \"0xeac62E27285DF9abCE7d8e12005690a23674ceB3\",\r\n    \"0x795f6A0563E2273Ee5Df38FB2fFee28da596EC8a\",\r\n    \"0xFe5bEc09CA1a8BdFA7A6f22eF62761389B9FD432\",\r\n    \"0x78a2a850b7d47ECDCb1C09B10BBe7F1dc4C67Dce\",\r\n    \"0x3f8c0d998c5e2b9e4192b2b0584829860cc07155\",\r\n    \"0xe92f313bbe284f3b42db96e5bcb02568576652ec\",\r\n    \"0x4f248BBAa4059806e33FeCF7FF54Dcc8E5a12594\",\r\n    \"0x0723A62566cA323777622D819B7e3a0C63D62c53\",\r\n    \"0xB640Ba861907b84159AC9893209a2a51B02b4845\",\r\n    \"0x62c46784e6fbbe766fa2ccba3330a5d749d37b72\",\r\n    \"0x658e11D865276Eff95395c448bFBB747CcAaAD8d\"\r\n];","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport { addresses } from \"./whitelist\";\r\n\r\nconst { MerkleTree } = require('merkletreejs');\r\nconst keccak256 = require('keccak256');\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: var(--secondary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: var(--primary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px dashed var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(0);\r\n  const [totalSupply, setTotalSupply] = useState(0);\r\n  const [isNotWhitelisted, setIsNotWhitelisted] = useState(false);\r\n  const [hideButtons, setHideButtons] = useState(\"visible\");\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  var whitelistAddresses = []; \r\n  \r\n  // console.log(whitelistAddresses)\r\n  whitelistAddresses = addresses;\r\n  // console.log(whitelistAddresses);\r\n\r\n  const leafNodes = whitelistAddresses.map(addr => keccak256(addr));\r\n  const merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true });\r\n  const rootHash = merkleTree.getRoot();\r\n  // console.log(rootHash.toString('hex'));\r\n\r\n  const claimWhitelistNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * 1);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n\r\n    const claimingAddress = keccak256(blockchain.account);\r\n    const hexProof = merkleTree.getHexProof(claimingAddress);\r\n\r\n    blockchain.smartContract.methods\r\n      .mintWhitelist(hexProof, mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const mintNFTs = () => {\r\n    checkMintsAvailable();\r\n    if (mintAmount > 0) {\r\n      if (data.onlyWhitelisted) {\r\n        claimWhitelistNFTs()\r\n      } else {\r\n        claimNFTs()\r\n      }\r\n    } \r\n  }\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * 1);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 0) {\r\n      newMintAmount = 0;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n    checkMintsAvailable();\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let mintsAvailable = Number(data.maxMintAmountPerAddress) - Number(data.minted);\r\n    let newMintAmount = mintAmount + 1;\r\n    if (mintsAvailable >= Number(data.maxMintAmountPerTx) || Number(data.maxMintAmountPerAddress) == 0) {\r\n      if (newMintAmount > Number(data.maxMintAmountPerTx)) {\r\n        newMintAmount = Number(data.maxMintAmountPerTx);\r\n      }\r\n    } else {\r\n      if (newMintAmount > mintsAvailable) {\r\n        newMintAmount = mintsAvailable;\r\n      }\r\n    }\r\n    setMintAmount(newMintAmount);\r\n    checkMintsAvailable();\r\n  };\r\n\r\n  const checkMintsAvailable = () => {\r\n    let mintsAvailable = Number(data.maxMintAmountPerAddress) - Number(data.minted);\r\n    // if (mintsAvailable < mintAmount && Number(data.maxMintAmountPerAddress) > 0) {\r\n    //   setMintAmount(mintsAvailable);\r\n    // }\r\n    if (mintsAvailable <= 0 && Number(data.maxMintAmountPerAddress) > 0) {\r\n      setFeedback(\"You've reached the maximum number of mints allowed.\");\r\n      setMintAmount(0);\r\n      setHideButtons(\"hidden\")\r\n    } else {\r\n      checkWhitelist();\r\n    }\r\n  };\r\n\r\n  const checkWhitelist = () => {\r\n    const leaf = keccak256(blockchain.account);\r\n    const proof = merkleTree.getHexProof(leaf);\r\n    let isWhitelisted = merkleTree.verify(proof, leaf, rootHash);\r\n    // console.log(\"isWhitelisted: \" + isWhitelisted);\r\n    // console.log(\"onlyWhitelisted: \" + data.onlyWhitelisted);\r\n    if (!isWhitelisted && data.onlyWhitelisted) {\r\n      setFeedback(\"You're not on the Whitelist.\");\r\n      setHideButtons(\"hidden\")\r\n      setIsNotWhitelisted(true);\r\n    } else {\r\n      setFeedback(\"Click to mint your NFT.\");\r\n      setHideButtons(\"visible\")\r\n      setIsNotWhitelisted(false);\r\n    }\r\n  }\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getTotalSupply = () => {\r\n    // Initialize data query request for Ethplorer API\r\n    const uriEthplorer = \"https://api.ethplorer.io/getTokenInfo/0xf880B2a16f257D0b9b8ab64351A07a4137527C82?apiKey=EK-seprh-JMENNjJ-QQWNb\";\r\n    const xhrEthplorer = new XMLHttpRequest();\r\n    xhrEthplorer.responseType = 'json';\r\n    xhrEthplorer.open('GET', uriEthplorer);\r\n    xhrEthplorer.onload = function () {\r\n      // console.log('data returned:', xhrEthplorer.response);\r\n      // Total Supply\r\n      let totalSupply = parseInt(xhrEthplorer.response.totalSupply);\r\n      setTotalSupply(totalSupply);\r\n    }\r\n    xhrEthplorer.onerror = () => {\r\n      console.error('Ethplorer request failed.');\r\n    }\r\n    xhrEthplorer.send();\r\n  }\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n    getTotalSupply();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  useEffect(() => {\r\n    checkWhitelist();\r\n  }, [blockchain.account, data.onlyWhitelisted]);\r\n\r\n  useEffect(() => {\r\n    checkMintsAvailable();\r\n  }, [data.minted, data.maxMintAmountPerAddress]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\r\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\r\n      >\r\n        <a href={\"https://coolcookiesnft.com\"}>\r\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"}\r\n            onMouseOver={(e) => {\r\n              e.currentTarget.src=\"/config/images/logo-black.png\"\r\n            }}\r\n            onMouseOut={(e) => {\r\n              e.currentTarget.src=\"/config/images/logo.png\"\r\n            }} />\r\n        </a>\r\n        <s.SpacerSmall />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <a href={\"https://coolcookiesnft.com\"}>\r\n              <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\r\n            </a>\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container\r\n            flex={2}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n              backgroundColor: \"var(--accent)\",\r\n              padding: 24,\r\n              borderRadius: 24,\r\n              border: \"4px dashed var(--secondary)\",\r\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n            }}\r\n          >\r\n            <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 50,\r\n                fontWeight: \"bold\",\r\n                color: \"var(--accent-text)\",\r\n              }}\r\n            >\r\n              {Number(data.totalSupply) >= 0 ? data.totalSupply : totalSupply > 0 ? totalSupply : \"?\"} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle>\r\n            <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"var(--primary-text)\",\r\n              }}\r\n            >\r\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\r\n              </StyledLink>\r\n            </s.TextDescription>\r\n            <s.SpacerSmall />\r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                  {CONFIG.NETWORK.SYMBOL}.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      Connect to the {CONFIG.NETWORK.NAME} network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {feedback}\r\n                    </s.TextDescription>\r\n                    <s.SpacerMedium />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledRoundButton\r\n                        style={{ \r\n                          lineHeight: 0.4, \r\n                          visibility: hideButtons}}\r\n                        disabled={data.paused || claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.SpacerMedium />\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                          visibility: hideButtons\r\n                        }}\r\n                      >\r\n                        {mintAmount}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <StyledRoundButton\r\n                        style={{ \r\n                          lineHeight: 0.4, \r\n                          visibility: hideButtons}}\r\n                        disabled={data.paused || claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.Container>\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={mintAmount == 0 || data.paused || claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          mintNFTs();\r\n                          getData();\r\n                        }}\r\n                        hidden={hideButtons == \"hidden\" ? 1 : 0}\r\n                      >\r\n                        {data.paused ? \"PAUSED\" : claimingNft ? \"BUSY\" : data.onlyWhitelisted ? \"PRESALE MINT\" : \"MINT\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <s.SpacerMedium />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <a href={\"https://coolcookiesnft.com\"}>\r\n              <StyledImg\r\n                alt={\"example\"}\r\n                src={\"/config/images/example.gif\"}\r\n                // style={{ transform: \"scaleX(-1)\" }}\r\n              />\r\n            </a>\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            Please make sure you are connected to the right network (\r\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\r\n            Once you make the purchase, you cannot undo this action.\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\r\n            successfully mint your NFT. We recommend that you don't lower the\r\n            gas limit.\r\n          </s.TextDescription>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}